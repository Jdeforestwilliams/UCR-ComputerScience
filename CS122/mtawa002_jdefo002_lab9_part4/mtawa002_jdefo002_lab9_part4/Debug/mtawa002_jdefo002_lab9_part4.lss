
mtawa002_jdefo002_lab9_part4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000788  0000081c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000788  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  0080010c  0080010c  00000828  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000828  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000858  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000367  00000000  00000000  000008c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001b0  00000000  00000000  00000c27  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000043e  00000000  00000000  00000dd7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d4  00000000  00000000  00001218  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000280  00000000  00000000  000012ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000119  00000000  00000000  0000156c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00001685  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	bb c0       	rjmp	.+374    	; 0x1ac <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 e8       	ldi	r30, 0x88	; 136
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 30       	cpi	r26, 0x0C	; 12
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e0       	ldi	r26, 0x0C	; 12
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	aa 31       	cpi	r26, 0x1A	; 26
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	ae d1       	rcall	.+860    	; 0x420 <main>
  c4:	5f c3       	rjmp	.+1726   	; 0x784 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <GetKeypadKey>:
void TimerOff() {
	TCCR1B 	= 0x00;
}

void TimerISR() {
	TimerFlag = 1;
  c8:	8f ee       	ldi	r24, 0xEF	; 239
  ca:	8b b9       	out	0x0b, r24	; 11
  cc:	00 00       	nop
  ce:	48 9b       	sbis	0x09, 0	; 9
  d0:	29 c0       	rjmp	.+82     	; 0x124 <GetKeypadKey+0x5c>
  d2:	49 9b       	sbis	0x09, 1	; 9
  d4:	29 c0       	rjmp	.+82     	; 0x128 <GetKeypadKey+0x60>
  d6:	4a 9b       	sbis	0x09, 2	; 9
  d8:	29 c0       	rjmp	.+82     	; 0x12c <GetKeypadKey+0x64>
  da:	4b 9b       	sbis	0x09, 3	; 9
  dc:	29 c0       	rjmp	.+82     	; 0x130 <GetKeypadKey+0x68>
  de:	8f ed       	ldi	r24, 0xDF	; 223
  e0:	8b b9       	out	0x0b, r24	; 11
  e2:	00 00       	nop
  e4:	48 9b       	sbis	0x09, 0	; 9
  e6:	26 c0       	rjmp	.+76     	; 0x134 <GetKeypadKey+0x6c>
  e8:	49 9b       	sbis	0x09, 1	; 9
  ea:	26 c0       	rjmp	.+76     	; 0x138 <GetKeypadKey+0x70>
  ec:	4a 9b       	sbis	0x09, 2	; 9
  ee:	26 c0       	rjmp	.+76     	; 0x13c <GetKeypadKey+0x74>
  f0:	4b 9b       	sbis	0x09, 3	; 9
  f2:	26 c0       	rjmp	.+76     	; 0x140 <GetKeypadKey+0x78>
  f4:	8f eb       	ldi	r24, 0xBF	; 191
  f6:	8b b9       	out	0x0b, r24	; 11
  f8:	00 00       	nop
  fa:	48 9b       	sbis	0x09, 0	; 9
  fc:	23 c0       	rjmp	.+70     	; 0x144 <GetKeypadKey+0x7c>
  fe:	49 9b       	sbis	0x09, 1	; 9
 100:	23 c0       	rjmp	.+70     	; 0x148 <GetKeypadKey+0x80>
 102:	4a 9b       	sbis	0x09, 2	; 9
 104:	23 c0       	rjmp	.+70     	; 0x14c <GetKeypadKey+0x84>
 106:	4b 9b       	sbis	0x09, 3	; 9
 108:	23 c0       	rjmp	.+70     	; 0x150 <GetKeypadKey+0x88>
 10a:	8f e7       	ldi	r24, 0x7F	; 127
 10c:	8b b9       	out	0x0b, r24	; 11
 10e:	00 00       	nop
 110:	48 9b       	sbis	0x09, 0	; 9
 112:	20 c0       	rjmp	.+64     	; 0x154 <GetKeypadKey+0x8c>
 114:	49 9b       	sbis	0x09, 1	; 9
 116:	20 c0       	rjmp	.+64     	; 0x158 <GetKeypadKey+0x90>
 118:	4a 9b       	sbis	0x09, 2	; 9
 11a:	20 c0       	rjmp	.+64     	; 0x15c <GetKeypadKey+0x94>
 11c:	4b 99       	sbic	0x09, 3	; 9
 11e:	20 c0       	rjmp	.+64     	; 0x160 <GetKeypadKey+0x98>
 120:	84 e4       	ldi	r24, 0x44	; 68
 122:	08 95       	ret
 124:	81 e3       	ldi	r24, 0x31	; 49
 126:	08 95       	ret
 128:	84 e3       	ldi	r24, 0x34	; 52
 12a:	08 95       	ret
 12c:	87 e3       	ldi	r24, 0x37	; 55
 12e:	08 95       	ret
 130:	8a e2       	ldi	r24, 0x2A	; 42
 132:	08 95       	ret
 134:	82 e3       	ldi	r24, 0x32	; 50
 136:	08 95       	ret
 138:	85 e3       	ldi	r24, 0x35	; 53
 13a:	08 95       	ret
 13c:	88 e3       	ldi	r24, 0x38	; 56
 13e:	08 95       	ret
 140:	80 e3       	ldi	r24, 0x30	; 48
 142:	08 95       	ret
 144:	83 e3       	ldi	r24, 0x33	; 51
 146:	08 95       	ret
 148:	86 e3       	ldi	r24, 0x36	; 54
 14a:	08 95       	ret
 14c:	89 e3       	ldi	r24, 0x39	; 57
 14e:	08 95       	ret
 150:	83 e2       	ldi	r24, 0x23	; 35
 152:	08 95       	ret
 154:	81 e4       	ldi	r24, 0x41	; 65
 156:	08 95       	ret
 158:	82 e4       	ldi	r24, 0x42	; 66
 15a:	08 95       	ret
 15c:	83 e4       	ldi	r24, 0x43	; 67
 15e:	08 95       	ret
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	08 95       	ret

00000164 <TimerOn>:
 164:	8b e0       	ldi	r24, 0x0B	; 11
 166:	80 93 81 00 	sts	0x0081, r24
 16a:	8d e7       	ldi	r24, 0x7D	; 125
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	90 93 89 00 	sts	0x0089, r25
 172:	80 93 88 00 	sts	0x0088, r24
 176:	82 e0       	ldi	r24, 0x02	; 2
 178:	80 93 6f 00 	sts	0x006F, r24
 17c:	10 92 85 00 	sts	0x0085, r1
 180:	10 92 84 00 	sts	0x0084, r1
 184:	80 91 08 01 	lds	r24, 0x0108
 188:	90 91 09 01 	lds	r25, 0x0109
 18c:	a0 91 0a 01 	lds	r26, 0x010A
 190:	b0 91 0b 01 	lds	r27, 0x010B
 194:	80 93 14 01 	sts	0x0114, r24
 198:	90 93 15 01 	sts	0x0115, r25
 19c:	a0 93 16 01 	sts	0x0116, r26
 1a0:	b0 93 17 01 	sts	0x0117, r27
 1a4:	8f b7       	in	r24, 0x3f	; 63
 1a6:	80 68       	ori	r24, 0x80	; 128
 1a8:	8f bf       	out	0x3f, r24	; 63
 1aa:	08 95       	ret

000001ac <__vector_13>:
}

ISR(TIMER1_COMPA_vect)
{
 1ac:	1f 92       	push	r1
 1ae:	0f 92       	push	r0
 1b0:	0f b6       	in	r0, 0x3f	; 63
 1b2:	0f 92       	push	r0
 1b4:	11 24       	eor	r1, r1
 1b6:	8f 93       	push	r24
 1b8:	9f 93       	push	r25
 1ba:	af 93       	push	r26
 1bc:	bf 93       	push	r27
	_avr_timer_cntcurr--;
 1be:	80 91 14 01 	lds	r24, 0x0114
 1c2:	90 91 15 01 	lds	r25, 0x0115
 1c6:	a0 91 16 01 	lds	r26, 0x0116
 1ca:	b0 91 17 01 	lds	r27, 0x0117
 1ce:	01 97       	sbiw	r24, 0x01	; 1
 1d0:	a1 09       	sbc	r26, r1
 1d2:	b1 09       	sbc	r27, r1
 1d4:	80 93 14 01 	sts	0x0114, r24
 1d8:	90 93 15 01 	sts	0x0115, r25
 1dc:	a0 93 16 01 	sts	0x0116, r26
 1e0:	b0 93 17 01 	sts	0x0117, r27
	if (_avr_timer_cntcurr == 0) {
 1e4:	89 2b       	or	r24, r25
 1e6:	8a 2b       	or	r24, r26
 1e8:	8b 2b       	or	r24, r27
 1ea:	99 f4       	brne	.+38     	; 0x212 <__vector_13+0x66>
void TimerOff() {
	TCCR1B 	= 0x00;
}

void TimerISR() {
	TimerFlag = 1;
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	80 93 18 01 	sts	0x0118, r24
ISR(TIMER1_COMPA_vect)
{
	_avr_timer_cntcurr--;
	if (_avr_timer_cntcurr == 0) {
		TimerISR();
		_avr_timer_cntcurr = _avr_timer_M;
 1f2:	80 91 08 01 	lds	r24, 0x0108
 1f6:	90 91 09 01 	lds	r25, 0x0109
 1fa:	a0 91 0a 01 	lds	r26, 0x010A
 1fe:	b0 91 0b 01 	lds	r27, 0x010B
 202:	80 93 14 01 	sts	0x0114, r24
 206:	90 93 15 01 	sts	0x0115, r25
 20a:	a0 93 16 01 	sts	0x0116, r26
 20e:	b0 93 17 01 	sts	0x0117, r27
	}
}
 212:	bf 91       	pop	r27
 214:	af 91       	pop	r26
 216:	9f 91       	pop	r25
 218:	8f 91       	pop	r24
 21a:	0f 90       	pop	r0
 21c:	0f be       	out	0x3f, r0	; 63
 21e:	0f 90       	pop	r0
 220:	1f 90       	pop	r1
 222:	18 95       	reti

00000224 <TickFct_part1>:
int value = 0;
int counter = 0; 
char phases[] = {0x01, 0x03,0x02, 0x06, 0x04, 0x0C, 0x08, 0x09}; //A, AB, B, BC, C, CD, D, DA
unsigned char input = 0;
void TickFct_part1(){
	input = GetKeypadKey(); 
 224:	51 df       	rcall	.-350    	; 0xc8 <GetKeypadKey>
 226:	80 93 0c 01 	sts	0x010C, r24
	//PORTC  = input;
	switch(sm_state){
 22a:	90 91 19 01 	lds	r25, 0x0119
 22e:	92 30       	cpi	r25, 0x02	; 2
 230:	09 f4       	brne	.+2      	; 0x234 <TickFct_part1+0x10>
 232:	a3 c0       	rjmp	.+326    	; 0x37a <TickFct_part1+0x156>
 234:	28 f4       	brcc	.+10     	; 0x240 <TickFct_part1+0x1c>
 236:	99 23       	and	r25, r25
 238:	51 f0       	breq	.+20     	; 0x24e <TickFct_part1+0x2a>
 23a:	91 30       	cpi	r25, 0x01	; 1
 23c:	61 f0       	breq	.+24     	; 0x256 <TickFct_part1+0x32>
 23e:	a3 c0       	rjmp	.+326    	; 0x386 <TickFct_part1+0x162>
 240:	93 30       	cpi	r25, 0x03	; 3
 242:	09 f4       	brne	.+2      	; 0x246 <TickFct_part1+0x22>
 244:	73 c0       	rjmp	.+230    	; 0x32c <TickFct_part1+0x108>
 246:	94 30       	cpi	r25, 0x04	; 4
 248:	09 f4       	brne	.+2      	; 0x24c <TickFct_part1+0x28>
 24a:	83 c0       	rjmp	.+262    	; 0x352 <TickFct_part1+0x12e>
 24c:	9c c0       	rjmp	.+312    	; 0x386 <TickFct_part1+0x162>
		case INIT:
			sm_state = wait_input;
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	80 93 19 01 	sts	0x0119, r24
			break;
 254:	a4 c0       	rjmp	.+328    	; 0x39e <TickFct_part1+0x17a>
		case wait_input:
			if (input != '\0' && input != 'A' && input != 'B')
 256:	88 23       	and	r24, r24
 258:	09 f4       	brne	.+2      	; 0x25c <TickFct_part1+0x38>
 25a:	a1 c0       	rjmp	.+322    	; 0x39e <TickFct_part1+0x17a>
 25c:	81 34       	cpi	r24, 0x41	; 65
 25e:	31 f1       	breq	.+76     	; 0x2ac <TickFct_part1+0x88>
 260:	82 34       	cpi	r24, 0x42	; 66
 262:	09 f4       	brne	.+2      	; 0x266 <TickFct_part1+0x42>
 264:	43 c0       	rjmp	.+134    	; 0x2ec <TickFct_part1+0xc8>
			{	
				sm_state = debounce;
 266:	92 e0       	ldi	r25, 0x02	; 2
 268:	90 93 19 01 	sts	0x0119, r25
				if(input < 65){
 26c:	81 34       	cpi	r24, 0x41	; 65
 26e:	08 f0       	brcs	.+2      	; 0x272 <TickFct_part1+0x4e>
 270:	d6 c0       	rjmp	.+428    	; 0x41e <TickFct_part1+0x1fa>
					PORTC  = input;
 272:	88 b9       	out	0x08, r24	; 8
					value = value*10 + (input - 48);
 274:	20 91 0f 01 	lds	r18, 0x010F
 278:	30 91 10 01 	lds	r19, 0x0110
 27c:	c9 01       	movw	r24, r18
 27e:	88 0f       	add	r24, r24
 280:	99 1f       	adc	r25, r25
 282:	22 0f       	add	r18, r18
 284:	33 1f       	adc	r19, r19
 286:	22 0f       	add	r18, r18
 288:	33 1f       	adc	r19, r19
 28a:	22 0f       	add	r18, r18
 28c:	33 1f       	adc	r19, r19
 28e:	82 0f       	add	r24, r18
 290:	93 1f       	adc	r25, r19
 292:	40 91 0c 01 	lds	r20, 0x010C
 296:	50 e0       	ldi	r21, 0x00	; 0
 298:	40 53       	subi	r20, 0x30	; 48
 29a:	51 09       	sbc	r21, r1
 29c:	84 0f       	add	r24, r20
 29e:	95 1f       	adc	r25, r21
 2a0:	90 93 10 01 	sts	0x0110, r25
 2a4:	80 93 0f 01 	sts	0x010F, r24
					PORTC = value; 
 2a8:	88 b9       	out	0x08, r24	; 8
 2aa:	70 c0       	rjmp	.+224    	; 0x38c <TickFct_part1+0x168>
				} 
			}
			else if (input == 'A' ){
				sm_state = forward; 
 2ac:	83 e0       	ldi	r24, 0x03	; 3
 2ae:	80 93 19 01 	sts	0x0119, r24
				numPhases = (value / 5.625 ) * 64;
 2b2:	60 91 0f 01 	lds	r22, 0x010F
 2b6:	70 91 10 01 	lds	r23, 0x0110
 2ba:	88 27       	eor	r24, r24
 2bc:	77 fd       	sbrc	r23, 7
 2be:	80 95       	com	r24
 2c0:	98 2f       	mov	r25, r24
 2c2:	71 d1       	rcall	.+738    	; 0x5a6 <__floatsisf>
 2c4:	20 e0       	ldi	r18, 0x00	; 0
 2c6:	30 e0       	ldi	r19, 0x00	; 0
 2c8:	44 eb       	ldi	r20, 0xB4	; 180
 2ca:	50 e4       	ldi	r21, 0x40	; 64
 2cc:	d1 d0       	rcall	.+418    	; 0x470 <__divsf3>
 2ce:	20 e0       	ldi	r18, 0x00	; 0
 2d0:	30 e0       	ldi	r19, 0x00	; 0
 2d2:	40 e8       	ldi	r20, 0x80	; 128
 2d4:	52 e4       	ldi	r21, 0x42	; 66
 2d6:	f3 d1       	rcall	.+998    	; 0x6be <__mulsf3>
 2d8:	33 d1       	rcall	.+614    	; 0x540 <__fixsfsi>
 2da:	70 93 12 01 	sts	0x0112, r23
 2de:	60 93 11 01 	sts	0x0111, r22
				value = 0;
 2e2:	10 92 10 01 	sts	0x0110, r1
 2e6:	10 92 0f 01 	sts	0x010F, r1
 2ea:	50 c0       	rjmp	.+160    	; 0x38c <TickFct_part1+0x168>
			}
			else if (input == 'B' ){
				sm_state = backward;
 2ec:	84 e0       	ldi	r24, 0x04	; 4
 2ee:	80 93 19 01 	sts	0x0119, r24
				numPhases = (value / 5.625 ) * 64;
 2f2:	60 91 0f 01 	lds	r22, 0x010F
 2f6:	70 91 10 01 	lds	r23, 0x0110
 2fa:	88 27       	eor	r24, r24
 2fc:	77 fd       	sbrc	r23, 7
 2fe:	80 95       	com	r24
 300:	98 2f       	mov	r25, r24
 302:	51 d1       	rcall	.+674    	; 0x5a6 <__floatsisf>
 304:	20 e0       	ldi	r18, 0x00	; 0
 306:	30 e0       	ldi	r19, 0x00	; 0
 308:	44 eb       	ldi	r20, 0xB4	; 180
 30a:	50 e4       	ldi	r21, 0x40	; 64
 30c:	b1 d0       	rcall	.+354    	; 0x470 <__divsf3>
 30e:	20 e0       	ldi	r18, 0x00	; 0
 310:	30 e0       	ldi	r19, 0x00	; 0
 312:	40 e8       	ldi	r20, 0x80	; 128
 314:	52 e4       	ldi	r21, 0x42	; 66
 316:	d3 d1       	rcall	.+934    	; 0x6be <__mulsf3>
 318:	13 d1       	rcall	.+550    	; 0x540 <__fixsfsi>
 31a:	70 93 12 01 	sts	0x0112, r23
 31e:	60 93 11 01 	sts	0x0111, r22
				value = 0;
 322:	10 92 10 01 	sts	0x0110, r1
 326:	10 92 0f 01 	sts	0x010F, r1
 32a:	30 c0       	rjmp	.+96     	; 0x38c <TickFct_part1+0x168>
			else if (input == '\0'){
				sm_state = wait_input;
			}
			break;
		case forward:
			if (counter <= numPhases){
 32c:	20 91 0d 01 	lds	r18, 0x010D
 330:	30 91 0e 01 	lds	r19, 0x010E
 334:	80 91 11 01 	lds	r24, 0x0111
 338:	90 91 12 01 	lds	r25, 0x0112
 33c:	82 17       	cp	r24, r18
 33e:	93 07       	cpc	r25, r19
 340:	b4 f5       	brge	.+108    	; 0x3ae <TickFct_part1+0x18a>
				sm_state = forward;
			}
			else {
				sm_state = wait_input;
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	80 93 19 01 	sts	0x0119, r24
				counter = 0; 
 348:	10 92 0e 01 	sts	0x010E, r1
 34c:	10 92 0d 01 	sts	0x010D, r1
 350:	1d c0       	rjmp	.+58     	; 0x38c <TickFct_part1+0x168>
			}
			break;	
		case backward:
			if (counter <= numPhases){
 352:	20 91 0d 01 	lds	r18, 0x010D
 356:	30 91 0e 01 	lds	r19, 0x010E
 35a:	80 91 11 01 	lds	r24, 0x0111
 35e:	90 91 12 01 	lds	r25, 0x0112
 362:	82 17       	cp	r24, r18
 364:	93 07       	cpc	r25, r19
 366:	0c f0       	brlt	.+2      	; 0x36a <TickFct_part1+0x146>
 368:	3e c0       	rjmp	.+124    	; 0x3e6 <TickFct_part1+0x1c2>
				sm_state = backward;
			}
			else {
				sm_state = wait_input;
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	80 93 19 01 	sts	0x0119, r24
				counter = 0;
 370:	10 92 0e 01 	sts	0x010E, r1
 374:	10 92 0d 01 	sts	0x010D, r1
 378:	09 c0       	rjmp	.+18     	; 0x38c <TickFct_part1+0x168>
			}
			break;
		case debounce:
			if (input != '\0'){
 37a:	81 11       	cpse	r24, r1
 37c:	50 c0       	rjmp	.+160    	; 0x41e <TickFct_part1+0x1fa>
				sm_state = debounce;
			}
			else {
				sm_state = wait_input;
 37e:	81 e0       	ldi	r24, 0x01	; 1
 380:	80 93 19 01 	sts	0x0119, r24
 384:	0c c0       	rjmp	.+24     	; 0x39e <TickFct_part1+0x17a>
			}
			break;
		default :
			sm_state = INIT;
 386:	10 92 19 01 	sts	0x0119, r1
			break;
 38a:	08 95       	ret
	}
	switch(sm_state){
 38c:	80 91 19 01 	lds	r24, 0x0119
 390:	83 30       	cpi	r24, 0x03	; 3
 392:	69 f0       	breq	.+26     	; 0x3ae <TickFct_part1+0x18a>
 394:	84 30       	cpi	r24, 0x04	; 4
 396:	39 f1       	breq	.+78     	; 0x3e6 <TickFct_part1+0x1c2>
 398:	81 30       	cpi	r24, 0x01	; 1
 39a:	09 f0       	breq	.+2      	; 0x39e <TickFct_part1+0x17a>
 39c:	40 c0       	rjmp	.+128    	; 0x41e <TickFct_part1+0x1fa>
		case wait_input:
			PORTA = phases[position];
 39e:	e0 91 13 01 	lds	r30, 0x0113
 3a2:	f0 e0       	ldi	r31, 0x00	; 0
 3a4:	e0 50       	subi	r30, 0x00	; 0
 3a6:	ff 4f       	sbci	r31, 0xFF	; 255
 3a8:	80 81       	ld	r24, Z
 3aa:	82 b9       	out	0x02, r24	; 2
			break;
 3ac:	08 95       	ret
		case forward:
			if (position > 7)
 3ae:	80 91 13 01 	lds	r24, 0x0113
 3b2:	88 30       	cpi	r24, 0x08	; 8
 3b4:	10 f0       	brcs	.+4      	; 0x3ba <TickFct_part1+0x196>
			{
				position = 0; 
 3b6:	10 92 13 01 	sts	0x0113, r1
			}
			PORTA = phases[position];
 3ba:	e0 91 13 01 	lds	r30, 0x0113
 3be:	f0 e0       	ldi	r31, 0x00	; 0
 3c0:	e0 50       	subi	r30, 0x00	; 0
 3c2:	ff 4f       	sbci	r31, 0xFF	; 255
 3c4:	80 81       	ld	r24, Z
 3c6:	82 b9       	out	0x02, r24	; 2
			position++;
 3c8:	80 91 13 01 	lds	r24, 0x0113
 3cc:	8f 5f       	subi	r24, 0xFF	; 255
 3ce:	80 93 13 01 	sts	0x0113, r24
			counter++; 
 3d2:	80 91 0d 01 	lds	r24, 0x010D
 3d6:	90 91 0e 01 	lds	r25, 0x010E
 3da:	01 96       	adiw	r24, 0x01	; 1
 3dc:	90 93 0e 01 	sts	0x010E, r25
 3e0:	80 93 0d 01 	sts	0x010D, r24
			break;
 3e4:	08 95       	ret
		case backward:
			if (position < 1)
 3e6:	80 91 13 01 	lds	r24, 0x0113
 3ea:	81 11       	cpse	r24, r1
 3ec:	03 c0       	rjmp	.+6      	; 0x3f4 <TickFct_part1+0x1d0>
			{
				position = 7;
 3ee:	87 e0       	ldi	r24, 0x07	; 7
 3f0:	80 93 13 01 	sts	0x0113, r24
			}
			PORTA = phases[position];
 3f4:	e0 91 13 01 	lds	r30, 0x0113
 3f8:	f0 e0       	ldi	r31, 0x00	; 0
 3fa:	e0 50       	subi	r30, 0x00	; 0
 3fc:	ff 4f       	sbci	r31, 0xFF	; 255
 3fe:	80 81       	ld	r24, Z
 400:	82 b9       	out	0x02, r24	; 2
			position--;
 402:	80 91 13 01 	lds	r24, 0x0113
 406:	81 50       	subi	r24, 0x01	; 1
 408:	80 93 13 01 	sts	0x0113, r24
			counter++;
 40c:	80 91 0d 01 	lds	r24, 0x010D
 410:	90 91 0e 01 	lds	r25, 0x010E
 414:	01 96       	adiw	r24, 0x01	; 1
 416:	90 93 0e 01 	sts	0x010E, r25
 41a:	80 93 0d 01 	sts	0x010D, r24
 41e:	08 95       	ret

00000420 <main>:
	}
}

int main(void)
{
	DDRA = 0xFF; PORTA = 0x00; // Configure port A's 8 pins as inputs
 420:	8f ef       	ldi	r24, 0xFF	; 255
 422:	81 b9       	out	0x01, r24	; 1
 424:	12 b8       	out	0x02, r1	; 2
	DDRD = 0xF0; PORTD = 0x0F; 
 426:	90 ef       	ldi	r25, 0xF0	; 240
 428:	9a b9       	out	0x0a, r25	; 10
 42a:	9f e0       	ldi	r25, 0x0F	; 15
 42c:	9b b9       	out	0x0b, r25	; 11
	DDRC = 0xFF; PORTC = 0x00; 
 42e:	87 b9       	out	0x07, r24	; 7
 430:	18 b8       	out	0x08, r1	; 8

unsigned long _avr_timer_M = 1;
unsigned long _avr_timer_cntcurr = 0;

void TimerSet(unsigned long M) {
	_avr_timer_M = M;
 432:	83 e0       	ldi	r24, 0x03	; 3
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	a0 e0       	ldi	r26, 0x00	; 0
 438:	b0 e0       	ldi	r27, 0x00	; 0
 43a:	80 93 08 01 	sts	0x0108, r24
 43e:	90 93 09 01 	sts	0x0109, r25
 442:	a0 93 0a 01 	sts	0x010A, r26
 446:	b0 93 0b 01 	sts	0x010B, r27
	_avr_timer_cntcurr = _avr_timer_M;
 44a:	80 93 14 01 	sts	0x0114, r24
 44e:	90 93 15 01 	sts	0x0115, r25
 452:	a0 93 16 01 	sts	0x0116, r26
 456:	b0 93 17 01 	sts	0x0117, r27
{
	DDRA = 0xFF; PORTA = 0x00; // Configure port A's 8 pins as inputs
	DDRD = 0xF0; PORTD = 0x0F; 
	DDRC = 0xFF; PORTC = 0x00; 
	TimerSet(3);
	TimerOn();
 45a:	84 de       	rcall	.-760    	; 0x164 <TimerOn>
	sm_state = INIT;
 45c:	10 92 19 01 	sts	0x0119, r1
	while(1)
	{ 
		TickFct_part1();
 460:	e1 de       	rcall	.-574    	; 0x224 <TickFct_part1>
		while(!TimerFlag);
 462:	80 91 18 01 	lds	r24, 0x0118
 466:	88 23       	and	r24, r24
 468:	e1 f3       	breq	.-8      	; 0x462 <main+0x42>
		TimerFlag = 0;
 46a:	10 92 18 01 	sts	0x0118, r1
	}
 46e:	f8 cf       	rjmp	.-16     	; 0x460 <main+0x40>

00000470 <__divsf3>:
 470:	0c d0       	rcall	.+24     	; 0x48a <__divsf3x>
 472:	eb c0       	rjmp	.+470    	; 0x64a <__fp_round>
 474:	e3 d0       	rcall	.+454    	; 0x63c <__fp_pscB>
 476:	40 f0       	brcs	.+16     	; 0x488 <__divsf3+0x18>
 478:	da d0       	rcall	.+436    	; 0x62e <__fp_pscA>
 47a:	30 f0       	brcs	.+12     	; 0x488 <__divsf3+0x18>
 47c:	21 f4       	brne	.+8      	; 0x486 <__divsf3+0x16>
 47e:	5f 3f       	cpi	r21, 0xFF	; 255
 480:	19 f0       	breq	.+6      	; 0x488 <__divsf3+0x18>
 482:	cc c0       	rjmp	.+408    	; 0x61c <__fp_inf>
 484:	51 11       	cpse	r21, r1
 486:	15 c1       	rjmp	.+554    	; 0x6b2 <__fp_szero>
 488:	cf c0       	rjmp	.+414    	; 0x628 <__fp_nan>

0000048a <__divsf3x>:
 48a:	f0 d0       	rcall	.+480    	; 0x66c <__fp_split3>
 48c:	98 f3       	brcs	.-26     	; 0x474 <__divsf3+0x4>

0000048e <__divsf3_pse>:
 48e:	99 23       	and	r25, r25
 490:	c9 f3       	breq	.-14     	; 0x484 <__divsf3+0x14>
 492:	55 23       	and	r21, r21
 494:	b1 f3       	breq	.-20     	; 0x482 <__divsf3+0x12>
 496:	95 1b       	sub	r25, r21
 498:	55 0b       	sbc	r21, r21
 49a:	bb 27       	eor	r27, r27
 49c:	aa 27       	eor	r26, r26
 49e:	62 17       	cp	r22, r18
 4a0:	73 07       	cpc	r23, r19
 4a2:	84 07       	cpc	r24, r20
 4a4:	38 f0       	brcs	.+14     	; 0x4b4 <__divsf3_pse+0x26>
 4a6:	9f 5f       	subi	r25, 0xFF	; 255
 4a8:	5f 4f       	sbci	r21, 0xFF	; 255
 4aa:	22 0f       	add	r18, r18
 4ac:	33 1f       	adc	r19, r19
 4ae:	44 1f       	adc	r20, r20
 4b0:	aa 1f       	adc	r26, r26
 4b2:	a9 f3       	breq	.-22     	; 0x49e <__divsf3_pse+0x10>
 4b4:	33 d0       	rcall	.+102    	; 0x51c <__divsf3_pse+0x8e>
 4b6:	0e 2e       	mov	r0, r30
 4b8:	3a f0       	brmi	.+14     	; 0x4c8 <__divsf3_pse+0x3a>
 4ba:	e0 e8       	ldi	r30, 0x80	; 128
 4bc:	30 d0       	rcall	.+96     	; 0x51e <__divsf3_pse+0x90>
 4be:	91 50       	subi	r25, 0x01	; 1
 4c0:	50 40       	sbci	r21, 0x00	; 0
 4c2:	e6 95       	lsr	r30
 4c4:	00 1c       	adc	r0, r0
 4c6:	ca f7       	brpl	.-14     	; 0x4ba <__divsf3_pse+0x2c>
 4c8:	29 d0       	rcall	.+82     	; 0x51c <__divsf3_pse+0x8e>
 4ca:	fe 2f       	mov	r31, r30
 4cc:	27 d0       	rcall	.+78     	; 0x51c <__divsf3_pse+0x8e>
 4ce:	66 0f       	add	r22, r22
 4d0:	77 1f       	adc	r23, r23
 4d2:	88 1f       	adc	r24, r24
 4d4:	bb 1f       	adc	r27, r27
 4d6:	26 17       	cp	r18, r22
 4d8:	37 07       	cpc	r19, r23
 4da:	48 07       	cpc	r20, r24
 4dc:	ab 07       	cpc	r26, r27
 4de:	b0 e8       	ldi	r27, 0x80	; 128
 4e0:	09 f0       	breq	.+2      	; 0x4e4 <__divsf3_pse+0x56>
 4e2:	bb 0b       	sbc	r27, r27
 4e4:	80 2d       	mov	r24, r0
 4e6:	bf 01       	movw	r22, r30
 4e8:	ff 27       	eor	r31, r31
 4ea:	93 58       	subi	r25, 0x83	; 131
 4ec:	5f 4f       	sbci	r21, 0xFF	; 255
 4ee:	2a f0       	brmi	.+10     	; 0x4fa <__divsf3_pse+0x6c>
 4f0:	9e 3f       	cpi	r25, 0xFE	; 254
 4f2:	51 05       	cpc	r21, r1
 4f4:	68 f0       	brcs	.+26     	; 0x510 <__divsf3_pse+0x82>
 4f6:	92 c0       	rjmp	.+292    	; 0x61c <__fp_inf>
 4f8:	dc c0       	rjmp	.+440    	; 0x6b2 <__fp_szero>
 4fa:	5f 3f       	cpi	r21, 0xFF	; 255
 4fc:	ec f3       	brlt	.-6      	; 0x4f8 <__divsf3_pse+0x6a>
 4fe:	98 3e       	cpi	r25, 0xE8	; 232
 500:	dc f3       	brlt	.-10     	; 0x4f8 <__divsf3_pse+0x6a>
 502:	86 95       	lsr	r24
 504:	77 95       	ror	r23
 506:	67 95       	ror	r22
 508:	b7 95       	ror	r27
 50a:	f7 95       	ror	r31
 50c:	9f 5f       	subi	r25, 0xFF	; 255
 50e:	c9 f7       	brne	.-14     	; 0x502 <__divsf3_pse+0x74>
 510:	88 0f       	add	r24, r24
 512:	91 1d       	adc	r25, r1
 514:	96 95       	lsr	r25
 516:	87 95       	ror	r24
 518:	97 f9       	bld	r25, 7
 51a:	08 95       	ret
 51c:	e1 e0       	ldi	r30, 0x01	; 1
 51e:	66 0f       	add	r22, r22
 520:	77 1f       	adc	r23, r23
 522:	88 1f       	adc	r24, r24
 524:	bb 1f       	adc	r27, r27
 526:	62 17       	cp	r22, r18
 528:	73 07       	cpc	r23, r19
 52a:	84 07       	cpc	r24, r20
 52c:	ba 07       	cpc	r27, r26
 52e:	20 f0       	brcs	.+8      	; 0x538 <__divsf3_pse+0xaa>
 530:	62 1b       	sub	r22, r18
 532:	73 0b       	sbc	r23, r19
 534:	84 0b       	sbc	r24, r20
 536:	ba 0b       	sbc	r27, r26
 538:	ee 1f       	adc	r30, r30
 53a:	88 f7       	brcc	.-30     	; 0x51e <__divsf3_pse+0x90>
 53c:	e0 95       	com	r30
 53e:	08 95       	ret

00000540 <__fixsfsi>:
 540:	04 d0       	rcall	.+8      	; 0x54a <__fixunssfsi>
 542:	68 94       	set
 544:	b1 11       	cpse	r27, r1
 546:	b5 c0       	rjmp	.+362    	; 0x6b2 <__fp_szero>
 548:	08 95       	ret

0000054a <__fixunssfsi>:
 54a:	98 d0       	rcall	.+304    	; 0x67c <__fp_splitA>
 54c:	88 f0       	brcs	.+34     	; 0x570 <__fixunssfsi+0x26>
 54e:	9f 57       	subi	r25, 0x7F	; 127
 550:	90 f0       	brcs	.+36     	; 0x576 <__fixunssfsi+0x2c>
 552:	b9 2f       	mov	r27, r25
 554:	99 27       	eor	r25, r25
 556:	b7 51       	subi	r27, 0x17	; 23
 558:	a0 f0       	brcs	.+40     	; 0x582 <__fixunssfsi+0x38>
 55a:	d1 f0       	breq	.+52     	; 0x590 <__fixunssfsi+0x46>
 55c:	66 0f       	add	r22, r22
 55e:	77 1f       	adc	r23, r23
 560:	88 1f       	adc	r24, r24
 562:	99 1f       	adc	r25, r25
 564:	1a f0       	brmi	.+6      	; 0x56c <__fixunssfsi+0x22>
 566:	ba 95       	dec	r27
 568:	c9 f7       	brne	.-14     	; 0x55c <__fixunssfsi+0x12>
 56a:	12 c0       	rjmp	.+36     	; 0x590 <__fixunssfsi+0x46>
 56c:	b1 30       	cpi	r27, 0x01	; 1
 56e:	81 f0       	breq	.+32     	; 0x590 <__fixunssfsi+0x46>
 570:	9f d0       	rcall	.+318    	; 0x6b0 <__fp_zero>
 572:	b1 e0       	ldi	r27, 0x01	; 1
 574:	08 95       	ret
 576:	9c c0       	rjmp	.+312    	; 0x6b0 <__fp_zero>
 578:	67 2f       	mov	r22, r23
 57a:	78 2f       	mov	r23, r24
 57c:	88 27       	eor	r24, r24
 57e:	b8 5f       	subi	r27, 0xF8	; 248
 580:	39 f0       	breq	.+14     	; 0x590 <__fixunssfsi+0x46>
 582:	b9 3f       	cpi	r27, 0xF9	; 249
 584:	cc f3       	brlt	.-14     	; 0x578 <__fixunssfsi+0x2e>
 586:	86 95       	lsr	r24
 588:	77 95       	ror	r23
 58a:	67 95       	ror	r22
 58c:	b3 95       	inc	r27
 58e:	d9 f7       	brne	.-10     	; 0x586 <__fixunssfsi+0x3c>
 590:	3e f4       	brtc	.+14     	; 0x5a0 <__fixunssfsi+0x56>
 592:	90 95       	com	r25
 594:	80 95       	com	r24
 596:	70 95       	com	r23
 598:	61 95       	neg	r22
 59a:	7f 4f       	sbci	r23, 0xFF	; 255
 59c:	8f 4f       	sbci	r24, 0xFF	; 255
 59e:	9f 4f       	sbci	r25, 0xFF	; 255
 5a0:	08 95       	ret

000005a2 <__floatunsisf>:
 5a2:	e8 94       	clt
 5a4:	09 c0       	rjmp	.+18     	; 0x5b8 <__floatsisf+0x12>

000005a6 <__floatsisf>:
 5a6:	97 fb       	bst	r25, 7
 5a8:	3e f4       	brtc	.+14     	; 0x5b8 <__floatsisf+0x12>
 5aa:	90 95       	com	r25
 5ac:	80 95       	com	r24
 5ae:	70 95       	com	r23
 5b0:	61 95       	neg	r22
 5b2:	7f 4f       	sbci	r23, 0xFF	; 255
 5b4:	8f 4f       	sbci	r24, 0xFF	; 255
 5b6:	9f 4f       	sbci	r25, 0xFF	; 255
 5b8:	99 23       	and	r25, r25
 5ba:	a9 f0       	breq	.+42     	; 0x5e6 <__floatsisf+0x40>
 5bc:	f9 2f       	mov	r31, r25
 5be:	96 e9       	ldi	r25, 0x96	; 150
 5c0:	bb 27       	eor	r27, r27
 5c2:	93 95       	inc	r25
 5c4:	f6 95       	lsr	r31
 5c6:	87 95       	ror	r24
 5c8:	77 95       	ror	r23
 5ca:	67 95       	ror	r22
 5cc:	b7 95       	ror	r27
 5ce:	f1 11       	cpse	r31, r1
 5d0:	f8 cf       	rjmp	.-16     	; 0x5c2 <__floatsisf+0x1c>
 5d2:	fa f4       	brpl	.+62     	; 0x612 <__floatsisf+0x6c>
 5d4:	bb 0f       	add	r27, r27
 5d6:	11 f4       	brne	.+4      	; 0x5dc <__floatsisf+0x36>
 5d8:	60 ff       	sbrs	r22, 0
 5da:	1b c0       	rjmp	.+54     	; 0x612 <__floatsisf+0x6c>
 5dc:	6f 5f       	subi	r22, 0xFF	; 255
 5de:	7f 4f       	sbci	r23, 0xFF	; 255
 5e0:	8f 4f       	sbci	r24, 0xFF	; 255
 5e2:	9f 4f       	sbci	r25, 0xFF	; 255
 5e4:	16 c0       	rjmp	.+44     	; 0x612 <__floatsisf+0x6c>
 5e6:	88 23       	and	r24, r24
 5e8:	11 f0       	breq	.+4      	; 0x5ee <__floatsisf+0x48>
 5ea:	96 e9       	ldi	r25, 0x96	; 150
 5ec:	11 c0       	rjmp	.+34     	; 0x610 <__floatsisf+0x6a>
 5ee:	77 23       	and	r23, r23
 5f0:	21 f0       	breq	.+8      	; 0x5fa <__floatsisf+0x54>
 5f2:	9e e8       	ldi	r25, 0x8E	; 142
 5f4:	87 2f       	mov	r24, r23
 5f6:	76 2f       	mov	r23, r22
 5f8:	05 c0       	rjmp	.+10     	; 0x604 <__floatsisf+0x5e>
 5fa:	66 23       	and	r22, r22
 5fc:	71 f0       	breq	.+28     	; 0x61a <__floatsisf+0x74>
 5fe:	96 e8       	ldi	r25, 0x86	; 134
 600:	86 2f       	mov	r24, r22
 602:	70 e0       	ldi	r23, 0x00	; 0
 604:	60 e0       	ldi	r22, 0x00	; 0
 606:	2a f0       	brmi	.+10     	; 0x612 <__floatsisf+0x6c>
 608:	9a 95       	dec	r25
 60a:	66 0f       	add	r22, r22
 60c:	77 1f       	adc	r23, r23
 60e:	88 1f       	adc	r24, r24
 610:	da f7       	brpl	.-10     	; 0x608 <__floatsisf+0x62>
 612:	88 0f       	add	r24, r24
 614:	96 95       	lsr	r25
 616:	87 95       	ror	r24
 618:	97 f9       	bld	r25, 7
 61a:	08 95       	ret

0000061c <__fp_inf>:
 61c:	97 f9       	bld	r25, 7
 61e:	9f 67       	ori	r25, 0x7F	; 127
 620:	80 e8       	ldi	r24, 0x80	; 128
 622:	70 e0       	ldi	r23, 0x00	; 0
 624:	60 e0       	ldi	r22, 0x00	; 0
 626:	08 95       	ret

00000628 <__fp_nan>:
 628:	9f ef       	ldi	r25, 0xFF	; 255
 62a:	80 ec       	ldi	r24, 0xC0	; 192
 62c:	08 95       	ret

0000062e <__fp_pscA>:
 62e:	00 24       	eor	r0, r0
 630:	0a 94       	dec	r0
 632:	16 16       	cp	r1, r22
 634:	17 06       	cpc	r1, r23
 636:	18 06       	cpc	r1, r24
 638:	09 06       	cpc	r0, r25
 63a:	08 95       	ret

0000063c <__fp_pscB>:
 63c:	00 24       	eor	r0, r0
 63e:	0a 94       	dec	r0
 640:	12 16       	cp	r1, r18
 642:	13 06       	cpc	r1, r19
 644:	14 06       	cpc	r1, r20
 646:	05 06       	cpc	r0, r21
 648:	08 95       	ret

0000064a <__fp_round>:
 64a:	09 2e       	mov	r0, r25
 64c:	03 94       	inc	r0
 64e:	00 0c       	add	r0, r0
 650:	11 f4       	brne	.+4      	; 0x656 <__fp_round+0xc>
 652:	88 23       	and	r24, r24
 654:	52 f0       	brmi	.+20     	; 0x66a <__fp_round+0x20>
 656:	bb 0f       	add	r27, r27
 658:	40 f4       	brcc	.+16     	; 0x66a <__fp_round+0x20>
 65a:	bf 2b       	or	r27, r31
 65c:	11 f4       	brne	.+4      	; 0x662 <__fp_round+0x18>
 65e:	60 ff       	sbrs	r22, 0
 660:	04 c0       	rjmp	.+8      	; 0x66a <__fp_round+0x20>
 662:	6f 5f       	subi	r22, 0xFF	; 255
 664:	7f 4f       	sbci	r23, 0xFF	; 255
 666:	8f 4f       	sbci	r24, 0xFF	; 255
 668:	9f 4f       	sbci	r25, 0xFF	; 255
 66a:	08 95       	ret

0000066c <__fp_split3>:
 66c:	57 fd       	sbrc	r21, 7
 66e:	90 58       	subi	r25, 0x80	; 128
 670:	44 0f       	add	r20, r20
 672:	55 1f       	adc	r21, r21
 674:	59 f0       	breq	.+22     	; 0x68c <__fp_splitA+0x10>
 676:	5f 3f       	cpi	r21, 0xFF	; 255
 678:	71 f0       	breq	.+28     	; 0x696 <__fp_splitA+0x1a>
 67a:	47 95       	ror	r20

0000067c <__fp_splitA>:
 67c:	88 0f       	add	r24, r24
 67e:	97 fb       	bst	r25, 7
 680:	99 1f       	adc	r25, r25
 682:	61 f0       	breq	.+24     	; 0x69c <__fp_splitA+0x20>
 684:	9f 3f       	cpi	r25, 0xFF	; 255
 686:	79 f0       	breq	.+30     	; 0x6a6 <__fp_splitA+0x2a>
 688:	87 95       	ror	r24
 68a:	08 95       	ret
 68c:	12 16       	cp	r1, r18
 68e:	13 06       	cpc	r1, r19
 690:	14 06       	cpc	r1, r20
 692:	55 1f       	adc	r21, r21
 694:	f2 cf       	rjmp	.-28     	; 0x67a <__fp_split3+0xe>
 696:	46 95       	lsr	r20
 698:	f1 df       	rcall	.-30     	; 0x67c <__fp_splitA>
 69a:	08 c0       	rjmp	.+16     	; 0x6ac <__fp_splitA+0x30>
 69c:	16 16       	cp	r1, r22
 69e:	17 06       	cpc	r1, r23
 6a0:	18 06       	cpc	r1, r24
 6a2:	99 1f       	adc	r25, r25
 6a4:	f1 cf       	rjmp	.-30     	; 0x688 <__fp_splitA+0xc>
 6a6:	86 95       	lsr	r24
 6a8:	71 05       	cpc	r23, r1
 6aa:	61 05       	cpc	r22, r1
 6ac:	08 94       	sec
 6ae:	08 95       	ret

000006b0 <__fp_zero>:
 6b0:	e8 94       	clt

000006b2 <__fp_szero>:
 6b2:	bb 27       	eor	r27, r27
 6b4:	66 27       	eor	r22, r22
 6b6:	77 27       	eor	r23, r23
 6b8:	cb 01       	movw	r24, r22
 6ba:	97 f9       	bld	r25, 7
 6bc:	08 95       	ret

000006be <__mulsf3>:
 6be:	0b d0       	rcall	.+22     	; 0x6d6 <__mulsf3x>
 6c0:	c4 cf       	rjmp	.-120    	; 0x64a <__fp_round>
 6c2:	b5 df       	rcall	.-150    	; 0x62e <__fp_pscA>
 6c4:	28 f0       	brcs	.+10     	; 0x6d0 <__mulsf3+0x12>
 6c6:	ba df       	rcall	.-140    	; 0x63c <__fp_pscB>
 6c8:	18 f0       	brcs	.+6      	; 0x6d0 <__mulsf3+0x12>
 6ca:	95 23       	and	r25, r21
 6cc:	09 f0       	breq	.+2      	; 0x6d0 <__mulsf3+0x12>
 6ce:	a6 cf       	rjmp	.-180    	; 0x61c <__fp_inf>
 6d0:	ab cf       	rjmp	.-170    	; 0x628 <__fp_nan>
 6d2:	11 24       	eor	r1, r1
 6d4:	ee cf       	rjmp	.-36     	; 0x6b2 <__fp_szero>

000006d6 <__mulsf3x>:
 6d6:	ca df       	rcall	.-108    	; 0x66c <__fp_split3>
 6d8:	a0 f3       	brcs	.-24     	; 0x6c2 <__mulsf3+0x4>

000006da <__mulsf3_pse>:
 6da:	95 9f       	mul	r25, r21
 6dc:	d1 f3       	breq	.-12     	; 0x6d2 <__mulsf3+0x14>
 6de:	95 0f       	add	r25, r21
 6e0:	50 e0       	ldi	r21, 0x00	; 0
 6e2:	55 1f       	adc	r21, r21
 6e4:	62 9f       	mul	r22, r18
 6e6:	f0 01       	movw	r30, r0
 6e8:	72 9f       	mul	r23, r18
 6ea:	bb 27       	eor	r27, r27
 6ec:	f0 0d       	add	r31, r0
 6ee:	b1 1d       	adc	r27, r1
 6f0:	63 9f       	mul	r22, r19
 6f2:	aa 27       	eor	r26, r26
 6f4:	f0 0d       	add	r31, r0
 6f6:	b1 1d       	adc	r27, r1
 6f8:	aa 1f       	adc	r26, r26
 6fa:	64 9f       	mul	r22, r20
 6fc:	66 27       	eor	r22, r22
 6fe:	b0 0d       	add	r27, r0
 700:	a1 1d       	adc	r26, r1
 702:	66 1f       	adc	r22, r22
 704:	82 9f       	mul	r24, r18
 706:	22 27       	eor	r18, r18
 708:	b0 0d       	add	r27, r0
 70a:	a1 1d       	adc	r26, r1
 70c:	62 1f       	adc	r22, r18
 70e:	73 9f       	mul	r23, r19
 710:	b0 0d       	add	r27, r0
 712:	a1 1d       	adc	r26, r1
 714:	62 1f       	adc	r22, r18
 716:	83 9f       	mul	r24, r19
 718:	a0 0d       	add	r26, r0
 71a:	61 1d       	adc	r22, r1
 71c:	22 1f       	adc	r18, r18
 71e:	74 9f       	mul	r23, r20
 720:	33 27       	eor	r19, r19
 722:	a0 0d       	add	r26, r0
 724:	61 1d       	adc	r22, r1
 726:	23 1f       	adc	r18, r19
 728:	84 9f       	mul	r24, r20
 72a:	60 0d       	add	r22, r0
 72c:	21 1d       	adc	r18, r1
 72e:	82 2f       	mov	r24, r18
 730:	76 2f       	mov	r23, r22
 732:	6a 2f       	mov	r22, r26
 734:	11 24       	eor	r1, r1
 736:	9f 57       	subi	r25, 0x7F	; 127
 738:	50 40       	sbci	r21, 0x00	; 0
 73a:	8a f0       	brmi	.+34     	; 0x75e <__mulsf3_pse+0x84>
 73c:	e1 f0       	breq	.+56     	; 0x776 <__mulsf3_pse+0x9c>
 73e:	88 23       	and	r24, r24
 740:	4a f0       	brmi	.+18     	; 0x754 <__mulsf3_pse+0x7a>
 742:	ee 0f       	add	r30, r30
 744:	ff 1f       	adc	r31, r31
 746:	bb 1f       	adc	r27, r27
 748:	66 1f       	adc	r22, r22
 74a:	77 1f       	adc	r23, r23
 74c:	88 1f       	adc	r24, r24
 74e:	91 50       	subi	r25, 0x01	; 1
 750:	50 40       	sbci	r21, 0x00	; 0
 752:	a9 f7       	brne	.-22     	; 0x73e <__mulsf3_pse+0x64>
 754:	9e 3f       	cpi	r25, 0xFE	; 254
 756:	51 05       	cpc	r21, r1
 758:	70 f0       	brcs	.+28     	; 0x776 <__mulsf3_pse+0x9c>
 75a:	60 cf       	rjmp	.-320    	; 0x61c <__fp_inf>
 75c:	aa cf       	rjmp	.-172    	; 0x6b2 <__fp_szero>
 75e:	5f 3f       	cpi	r21, 0xFF	; 255
 760:	ec f3       	brlt	.-6      	; 0x75c <__mulsf3_pse+0x82>
 762:	98 3e       	cpi	r25, 0xE8	; 232
 764:	dc f3       	brlt	.-10     	; 0x75c <__mulsf3_pse+0x82>
 766:	86 95       	lsr	r24
 768:	77 95       	ror	r23
 76a:	67 95       	ror	r22
 76c:	b7 95       	ror	r27
 76e:	f7 95       	ror	r31
 770:	e7 95       	ror	r30
 772:	9f 5f       	subi	r25, 0xFF	; 255
 774:	c1 f7       	brne	.-16     	; 0x766 <__mulsf3_pse+0x8c>
 776:	fe 2b       	or	r31, r30
 778:	88 0f       	add	r24, r24
 77a:	91 1d       	adc	r25, r1
 77c:	96 95       	lsr	r25
 77e:	87 95       	ror	r24
 780:	97 f9       	bld	r25, 7
 782:	08 95       	ret

00000784 <_exit>:
 784:	f8 94       	cli

00000786 <__stop_program>:
 786:	ff cf       	rjmp	.-2      	; 0x786 <__stop_program>
