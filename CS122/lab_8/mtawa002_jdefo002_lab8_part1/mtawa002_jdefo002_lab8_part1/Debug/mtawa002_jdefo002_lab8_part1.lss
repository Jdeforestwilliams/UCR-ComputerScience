
mtawa002_jdefo002_lab8_part1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000020c  000002a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000020c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800104  00800104  000002a4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002a4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  000002d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000024a  00000000  00000000  0000033c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001aa  00000000  00000000  00000586  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000257  00000000  00000000  00000730  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e4  00000000  00000000  00000988  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000226  00000000  00000000  00000a6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000be  00000000  00000000  00000c92  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00000d50  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	8a c0       	rjmp	.+276    	; 0x14a <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	4b c0       	rjmp	.+150    	; 0xe4 <__vector_19>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e0       	ldi	r30, 0x0C	; 12
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	aa 30       	cpi	r26, 0x0A	; 10
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	7f d0       	rcall	.+254    	; 0x1c2 <main>
  c4:	a1 c0       	rjmp	.+322    	; 0x208 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <SPI_MasterInit>:
void TimerOff() {
	TCCR1B 	= 0x00;
}

void TimerISR() {
	TimerFlag = 1;
  c8:	80 eb       	ldi	r24, 0xB0	; 176
  ca:	84 b9       	out	0x04, r24	; 4
  cc:	80 e4       	ldi	r24, 0x40	; 64
  ce:	85 b9       	out	0x05, r24	; 5
  d0:	81 e5       	ldi	r24, 0x51	; 81
  d2:	8c bd       	out	0x2c, r24	; 44
  d4:	08 95       	ret

000000d6 <SPI_MasterTransmit>:
  d6:	8e bd       	out	0x2e, r24	; 46
  d8:	2c 98       	cbi	0x05, 4	; 5
  da:	0d b4       	in	r0, 0x2d	; 45
  dc:	07 fe       	sbrs	r0, 7
  de:	fd cf       	rjmp	.-6      	; 0xda <SPI_MasterTransmit+0x4>
  e0:	2c 9a       	sbi	0x05, 4	; 5
  e2:	08 95       	ret

000000e4 <__vector_19>:
  e4:	1f 92       	push	r1
  e6:	0f 92       	push	r0
  e8:	0f b6       	in	r0, 0x3f	; 63
  ea:	0f 92       	push	r0
  ec:	11 24       	eor	r1, r1
  ee:	8f 93       	push	r24
  f0:	8e b5       	in	r24, 0x2e	; 46
  f2:	80 93 09 01 	sts	0x0109, r24
  f6:	8f 91       	pop	r24
  f8:	0f 90       	pop	r0
  fa:	0f be       	out	0x3f, r0	; 63
  fc:	0f 90       	pop	r0
  fe:	1f 90       	pop	r1
 100:	18 95       	reti

00000102 <TimerOn>:
 102:	8b e0       	ldi	r24, 0x0B	; 11
 104:	80 93 81 00 	sts	0x0081, r24
 108:	8d e7       	ldi	r24, 0x7D	; 125
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	90 93 89 00 	sts	0x0089, r25
 110:	80 93 88 00 	sts	0x0088, r24
 114:	82 e0       	ldi	r24, 0x02	; 2
 116:	80 93 6f 00 	sts	0x006F, r24
 11a:	10 92 85 00 	sts	0x0085, r1
 11e:	10 92 84 00 	sts	0x0084, r1
 122:	80 91 00 01 	lds	r24, 0x0100
 126:	90 91 01 01 	lds	r25, 0x0101
 12a:	a0 91 02 01 	lds	r26, 0x0102
 12e:	b0 91 03 01 	lds	r27, 0x0103
 132:	80 93 04 01 	sts	0x0104, r24
 136:	90 93 05 01 	sts	0x0105, r25
 13a:	a0 93 06 01 	sts	0x0106, r26
 13e:	b0 93 07 01 	sts	0x0107, r27
 142:	8f b7       	in	r24, 0x3f	; 63
 144:	80 68       	ori	r24, 0x80	; 128
 146:	8f bf       	out	0x3f, r24	; 63
 148:	08 95       	ret

0000014a <__vector_13>:
}

ISR(TIMER1_COMPA_vect)
{
 14a:	1f 92       	push	r1
 14c:	0f 92       	push	r0
 14e:	0f b6       	in	r0, 0x3f	; 63
 150:	0f 92       	push	r0
 152:	11 24       	eor	r1, r1
 154:	8f 93       	push	r24
 156:	9f 93       	push	r25
 158:	af 93       	push	r26
 15a:	bf 93       	push	r27
	_avr_timer_cntcurr--;
 15c:	80 91 04 01 	lds	r24, 0x0104
 160:	90 91 05 01 	lds	r25, 0x0105
 164:	a0 91 06 01 	lds	r26, 0x0106
 168:	b0 91 07 01 	lds	r27, 0x0107
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	a1 09       	sbc	r26, r1
 170:	b1 09       	sbc	r27, r1
 172:	80 93 04 01 	sts	0x0104, r24
 176:	90 93 05 01 	sts	0x0105, r25
 17a:	a0 93 06 01 	sts	0x0106, r26
 17e:	b0 93 07 01 	sts	0x0107, r27
	if (_avr_timer_cntcurr == 0) {
 182:	89 2b       	or	r24, r25
 184:	8a 2b       	or	r24, r26
 186:	8b 2b       	or	r24, r27
 188:	99 f4       	brne	.+38     	; 0x1b0 <__vector_13+0x66>
void TimerOff() {
	TCCR1B 	= 0x00;
}

void TimerISR() {
	TimerFlag = 1;
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	80 93 08 01 	sts	0x0108, r24
ISR(TIMER1_COMPA_vect)
{
	_avr_timer_cntcurr--;
	if (_avr_timer_cntcurr == 0) {
		TimerISR();
		_avr_timer_cntcurr = _avr_timer_M;
 190:	80 91 00 01 	lds	r24, 0x0100
 194:	90 91 01 01 	lds	r25, 0x0101
 198:	a0 91 02 01 	lds	r26, 0x0102
 19c:	b0 91 03 01 	lds	r27, 0x0103
 1a0:	80 93 04 01 	sts	0x0104, r24
 1a4:	90 93 05 01 	sts	0x0105, r25
 1a8:	a0 93 06 01 	sts	0x0106, r26
 1ac:	b0 93 07 01 	sts	0x0107, r27
	}
}
 1b0:	bf 91       	pop	r27
 1b2:	af 91       	pop	r26
 1b4:	9f 91       	pop	r25
 1b6:	8f 91       	pop	r24
 1b8:	0f 90       	pop	r0
 1ba:	0f be       	out	0x3f, r0	; 63
 1bc:	0f 90       	pop	r0
 1be:	1f 90       	pop	r1
 1c0:	18 95       	reti

000001c2 <main>:

int main(void)
{
	//DDRB = 0xFF; PORTB = 0x00;
	TimerOn();
 1c2:	9f df       	rcall	.-194    	; 0x102 <TimerOn>

unsigned long _avr_timer_M = 1;
unsigned long _avr_timer_cntcurr = 0;

void TimerSet(unsigned long M) {
	_avr_timer_M = M;
 1c4:	88 ee       	ldi	r24, 0xE8	; 232
 1c6:	93 e0       	ldi	r25, 0x03	; 3
 1c8:	a0 e0       	ldi	r26, 0x00	; 0
 1ca:	b0 e0       	ldi	r27, 0x00	; 0
 1cc:	80 93 00 01 	sts	0x0100, r24
 1d0:	90 93 01 01 	sts	0x0101, r25
 1d4:	a0 93 02 01 	sts	0x0102, r26
 1d8:	b0 93 03 01 	sts	0x0103, r27
	_avr_timer_cntcurr = _avr_timer_M;
 1dc:	80 93 04 01 	sts	0x0104, r24
 1e0:	90 93 05 01 	sts	0x0105, r25
 1e4:	a0 93 06 01 	sts	0x0106, r26
 1e8:	b0 93 07 01 	sts	0x0107, r27
{
	//DDRB = 0xFF; PORTB = 0x00;
	TimerOn();
	TimerSet(1000);
	unsigned char data = 0;
	SPI_MasterInit();
 1ec:	6d df       	rcall	.-294    	; 0xc8 <SPI_MasterInit>
int main(void)
{
	//DDRB = 0xFF; PORTB = 0x00;
	TimerOn();
	TimerSet(1000);
	unsigned char data = 0;
 1ee:	c0 e0       	ldi	r28, 0x00	; 0
	SPI_MasterInit();
    while(1)
    {
		if (data < 255) data++;
 1f0:	cf 3f       	cpi	r28, 0xFF	; 255
 1f2:	09 f0       	breq	.+2      	; 0x1f6 <main+0x34>
 1f4:	cf 5f       	subi	r28, 0xFF	; 255
		SPI_MasterTransmit(data);
 1f6:	8c 2f       	mov	r24, r28
 1f8:	6e df       	rcall	.-292    	; 0xd6 <SPI_MasterTransmit>
		while(!TimerFlag);
 1fa:	90 91 08 01 	lds	r25, 0x0108
 1fe:	99 23       	and	r25, r25
 200:	e1 f3       	breq	.-8      	; 0x1fa <main+0x38>
		TimerFlag = 0;
 202:	10 92 08 01 	sts	0x0108, r1
    }
 206:	f4 cf       	rjmp	.-24     	; 0x1f0 <main+0x2e>

00000208 <_exit>:
 208:	f8 94       	cli

0000020a <__stop_program>:
 20a:	ff cf       	rjmp	.-2      	; 0x20a <__stop_program>
