
mtawa002_jdefo002_lab9_part3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000006d0  00000764  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  0080010c  0080010c  00000770  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000770  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  000007a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000361  00000000  00000000  00000808  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001b0  00000000  00000000  00000b69  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003f6  00000000  00000000  00000d19  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d4  00000000  00000000  00001110  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000277  00000000  00000000  000011e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000119  00000000  00000000  0000145b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00001574  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	bb c0       	rjmp	.+374    	; 0x1ac <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 ed       	ldi	r30, 0xD0	; 208
  a0:	f6 e0       	ldi	r31, 0x06	; 6
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 30       	cpi	r26, 0x0C	; 12
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e0       	ldi	r26, 0x0C	; 12
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	aa 31       	cpi	r26, 0x1A	; 26
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	52 d1       	rcall	.+676    	; 0x368 <main>
  c4:	03 c3       	rjmp	.+1542   	; 0x6cc <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <GetKeypadKey>:
void TimerOff() {
	TCCR1B 	= 0x00;
}

void TimerISR() {
	TimerFlag = 1;
  c8:	8f ee       	ldi	r24, 0xEF	; 239
  ca:	8b b9       	out	0x0b, r24	; 11
  cc:	00 00       	nop
  ce:	48 9b       	sbis	0x09, 0	; 9
  d0:	29 c0       	rjmp	.+82     	; 0x124 <GetKeypadKey+0x5c>
  d2:	49 9b       	sbis	0x09, 1	; 9
  d4:	29 c0       	rjmp	.+82     	; 0x128 <GetKeypadKey+0x60>
  d6:	4a 9b       	sbis	0x09, 2	; 9
  d8:	29 c0       	rjmp	.+82     	; 0x12c <GetKeypadKey+0x64>
  da:	4b 9b       	sbis	0x09, 3	; 9
  dc:	29 c0       	rjmp	.+82     	; 0x130 <GetKeypadKey+0x68>
  de:	8f ed       	ldi	r24, 0xDF	; 223
  e0:	8b b9       	out	0x0b, r24	; 11
  e2:	00 00       	nop
  e4:	48 9b       	sbis	0x09, 0	; 9
  e6:	26 c0       	rjmp	.+76     	; 0x134 <GetKeypadKey+0x6c>
  e8:	49 9b       	sbis	0x09, 1	; 9
  ea:	26 c0       	rjmp	.+76     	; 0x138 <GetKeypadKey+0x70>
  ec:	4a 9b       	sbis	0x09, 2	; 9
  ee:	26 c0       	rjmp	.+76     	; 0x13c <GetKeypadKey+0x74>
  f0:	4b 9b       	sbis	0x09, 3	; 9
  f2:	26 c0       	rjmp	.+76     	; 0x140 <GetKeypadKey+0x78>
  f4:	8f eb       	ldi	r24, 0xBF	; 191
  f6:	8b b9       	out	0x0b, r24	; 11
  f8:	00 00       	nop
  fa:	48 9b       	sbis	0x09, 0	; 9
  fc:	23 c0       	rjmp	.+70     	; 0x144 <GetKeypadKey+0x7c>
  fe:	49 9b       	sbis	0x09, 1	; 9
 100:	23 c0       	rjmp	.+70     	; 0x148 <GetKeypadKey+0x80>
 102:	4a 9b       	sbis	0x09, 2	; 9
 104:	23 c0       	rjmp	.+70     	; 0x14c <GetKeypadKey+0x84>
 106:	4b 9b       	sbis	0x09, 3	; 9
 108:	23 c0       	rjmp	.+70     	; 0x150 <GetKeypadKey+0x88>
 10a:	8f e7       	ldi	r24, 0x7F	; 127
 10c:	8b b9       	out	0x0b, r24	; 11
 10e:	00 00       	nop
 110:	48 9b       	sbis	0x09, 0	; 9
 112:	20 c0       	rjmp	.+64     	; 0x154 <GetKeypadKey+0x8c>
 114:	49 9b       	sbis	0x09, 1	; 9
 116:	20 c0       	rjmp	.+64     	; 0x158 <GetKeypadKey+0x90>
 118:	4a 9b       	sbis	0x09, 2	; 9
 11a:	20 c0       	rjmp	.+64     	; 0x15c <GetKeypadKey+0x94>
 11c:	4b 99       	sbic	0x09, 3	; 9
 11e:	20 c0       	rjmp	.+64     	; 0x160 <GetKeypadKey+0x98>
 120:	84 e4       	ldi	r24, 0x44	; 68
 122:	08 95       	ret
 124:	81 e3       	ldi	r24, 0x31	; 49
 126:	08 95       	ret
 128:	84 e3       	ldi	r24, 0x34	; 52
 12a:	08 95       	ret
 12c:	87 e3       	ldi	r24, 0x37	; 55
 12e:	08 95       	ret
 130:	8a e2       	ldi	r24, 0x2A	; 42
 132:	08 95       	ret
 134:	82 e3       	ldi	r24, 0x32	; 50
 136:	08 95       	ret
 138:	85 e3       	ldi	r24, 0x35	; 53
 13a:	08 95       	ret
 13c:	88 e3       	ldi	r24, 0x38	; 56
 13e:	08 95       	ret
 140:	80 e3       	ldi	r24, 0x30	; 48
 142:	08 95       	ret
 144:	83 e3       	ldi	r24, 0x33	; 51
 146:	08 95       	ret
 148:	86 e3       	ldi	r24, 0x36	; 54
 14a:	08 95       	ret
 14c:	89 e3       	ldi	r24, 0x39	; 57
 14e:	08 95       	ret
 150:	83 e2       	ldi	r24, 0x23	; 35
 152:	08 95       	ret
 154:	81 e4       	ldi	r24, 0x41	; 65
 156:	08 95       	ret
 158:	82 e4       	ldi	r24, 0x42	; 66
 15a:	08 95       	ret
 15c:	83 e4       	ldi	r24, 0x43	; 67
 15e:	08 95       	ret
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	08 95       	ret

00000164 <TimerOn>:
 164:	8b e0       	ldi	r24, 0x0B	; 11
 166:	80 93 81 00 	sts	0x0081, r24
 16a:	8d e7       	ldi	r24, 0x7D	; 125
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	90 93 89 00 	sts	0x0089, r25
 172:	80 93 88 00 	sts	0x0088, r24
 176:	82 e0       	ldi	r24, 0x02	; 2
 178:	80 93 6f 00 	sts	0x006F, r24
 17c:	10 92 85 00 	sts	0x0085, r1
 180:	10 92 84 00 	sts	0x0084, r1
 184:	80 91 08 01 	lds	r24, 0x0108
 188:	90 91 09 01 	lds	r25, 0x0109
 18c:	a0 91 0a 01 	lds	r26, 0x010A
 190:	b0 91 0b 01 	lds	r27, 0x010B
 194:	80 93 14 01 	sts	0x0114, r24
 198:	90 93 15 01 	sts	0x0115, r25
 19c:	a0 93 16 01 	sts	0x0116, r26
 1a0:	b0 93 17 01 	sts	0x0117, r27
 1a4:	8f b7       	in	r24, 0x3f	; 63
 1a6:	80 68       	ori	r24, 0x80	; 128
 1a8:	8f bf       	out	0x3f, r24	; 63
 1aa:	08 95       	ret

000001ac <__vector_13>:
}

ISR(TIMER1_COMPA_vect)
{
 1ac:	1f 92       	push	r1
 1ae:	0f 92       	push	r0
 1b0:	0f b6       	in	r0, 0x3f	; 63
 1b2:	0f 92       	push	r0
 1b4:	11 24       	eor	r1, r1
 1b6:	8f 93       	push	r24
 1b8:	9f 93       	push	r25
 1ba:	af 93       	push	r26
 1bc:	bf 93       	push	r27
	_avr_timer_cntcurr--;
 1be:	80 91 14 01 	lds	r24, 0x0114
 1c2:	90 91 15 01 	lds	r25, 0x0115
 1c6:	a0 91 16 01 	lds	r26, 0x0116
 1ca:	b0 91 17 01 	lds	r27, 0x0117
 1ce:	01 97       	sbiw	r24, 0x01	; 1
 1d0:	a1 09       	sbc	r26, r1
 1d2:	b1 09       	sbc	r27, r1
 1d4:	80 93 14 01 	sts	0x0114, r24
 1d8:	90 93 15 01 	sts	0x0115, r25
 1dc:	a0 93 16 01 	sts	0x0116, r26
 1e0:	b0 93 17 01 	sts	0x0117, r27
	if (_avr_timer_cntcurr == 0) {
 1e4:	89 2b       	or	r24, r25
 1e6:	8a 2b       	or	r24, r26
 1e8:	8b 2b       	or	r24, r27
 1ea:	99 f4       	brne	.+38     	; 0x212 <__vector_13+0x66>
void TimerOff() {
	TCCR1B 	= 0x00;
}

void TimerISR() {
	TimerFlag = 1;
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	80 93 18 01 	sts	0x0118, r24
ISR(TIMER1_COMPA_vect)
{
	_avr_timer_cntcurr--;
	if (_avr_timer_cntcurr == 0) {
		TimerISR();
		_avr_timer_cntcurr = _avr_timer_M;
 1f2:	80 91 08 01 	lds	r24, 0x0108
 1f6:	90 91 09 01 	lds	r25, 0x0109
 1fa:	a0 91 0a 01 	lds	r26, 0x010A
 1fe:	b0 91 0b 01 	lds	r27, 0x010B
 202:	80 93 14 01 	sts	0x0114, r24
 206:	90 93 15 01 	sts	0x0115, r25
 20a:	a0 93 16 01 	sts	0x0116, r26
 20e:	b0 93 17 01 	sts	0x0117, r27
	}
}
 212:	bf 91       	pop	r27
 214:	af 91       	pop	r26
 216:	9f 91       	pop	r25
 218:	8f 91       	pop	r24
 21a:	0f 90       	pop	r0
 21c:	0f be       	out	0x3f, r0	; 63
 21e:	0f 90       	pop	r0
 220:	1f 90       	pop	r1
 222:	18 95       	reti

00000224 <TickFct_part1>:
int value = 0;
int counter = 0; 
char phases[] = {0x01, 0x03,0x02, 0x06, 0x04, 0x0C, 0x08, 0x09}; //A, AB, B, BC, C, CD, D, DA
unsigned char input = 0;
void TickFct_part1(){
	input = GetKeypadKey(); 
 224:	51 df       	rcall	.-350    	; 0xc8 <GetKeypadKey>
 226:	80 93 0c 01 	sts	0x010C, r24
	//PORTC  = input;
	switch(sm_state){
 22a:	90 91 19 01 	lds	r25, 0x0119
 22e:	91 30       	cpi	r25, 0x01	; 1
 230:	61 f0       	breq	.+24     	; 0x24a <TickFct_part1+0x26>
 232:	38 f0       	brcs	.+14     	; 0x242 <TickFct_part1+0x1e>
 234:	92 30       	cpi	r25, 0x02	; 2
 236:	09 f4       	brne	.+2      	; 0x23a <TickFct_part1+0x16>
 238:	63 c0       	rjmp	.+198    	; 0x300 <TickFct_part1+0xdc>
 23a:	93 30       	cpi	r25, 0x03	; 3
 23c:	09 f4       	brne	.+2      	; 0x240 <TickFct_part1+0x1c>
 23e:	4d c0       	rjmp	.+154    	; 0x2da <TickFct_part1+0xb6>
 240:	65 c0       	rjmp	.+202    	; 0x30c <TickFct_part1+0xe8>
		case INIT:
			sm_state = wait_input;
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	80 93 19 01 	sts	0x0119, r24
			break;
 248:	6b c0       	rjmp	.+214    	; 0x320 <TickFct_part1+0xfc>
		case wait_input:
			if (input != '\0' && input != '#')
 24a:	88 23       	and	r24, r24
 24c:	09 f4       	brne	.+2      	; 0x250 <TickFct_part1+0x2c>
 24e:	68 c0       	rjmp	.+208    	; 0x320 <TickFct_part1+0xfc>
 250:	83 32       	cpi	r24, 0x23	; 35
 252:	19 f1       	breq	.+70     	; 0x29a <TickFct_part1+0x76>
			{	
				sm_state = debounce;
 254:	92 e0       	ldi	r25, 0x02	; 2
 256:	90 93 19 01 	sts	0x0119, r25
				if(input < 65){
 25a:	81 34       	cpi	r24, 0x41	; 65
 25c:	08 f0       	brcs	.+2      	; 0x260 <TickFct_part1+0x3c>
 25e:	83 c0       	rjmp	.+262    	; 0x366 <TickFct_part1+0x142>
					PORTC  = input;
 260:	88 b9       	out	0x08, r24	; 8
					value = value*10 + (input - 48);
 262:	20 91 0f 01 	lds	r18, 0x010F
 266:	30 91 10 01 	lds	r19, 0x0110
 26a:	c9 01       	movw	r24, r18
 26c:	88 0f       	add	r24, r24
 26e:	99 1f       	adc	r25, r25
 270:	22 0f       	add	r18, r18
 272:	33 1f       	adc	r19, r19
 274:	22 0f       	add	r18, r18
 276:	33 1f       	adc	r19, r19
 278:	22 0f       	add	r18, r18
 27a:	33 1f       	adc	r19, r19
 27c:	82 0f       	add	r24, r18
 27e:	93 1f       	adc	r25, r19
 280:	40 91 0c 01 	lds	r20, 0x010C
 284:	50 e0       	ldi	r21, 0x00	; 0
 286:	40 53       	subi	r20, 0x30	; 48
 288:	51 09       	sbc	r21, r1
 28a:	84 0f       	add	r24, r20
 28c:	95 1f       	adc	r25, r21
 28e:	90 93 10 01 	sts	0x0110, r25
 292:	80 93 0f 01 	sts	0x010F, r24
					PORTC = value; 
 296:	88 b9       	out	0x08, r24	; 8
 298:	3c c0       	rjmp	.+120    	; 0x312 <TickFct_part1+0xee>
				} 
			}
			else if (input == '#' ){
				sm_state = forward; 
 29a:	83 e0       	ldi	r24, 0x03	; 3
 29c:	80 93 19 01 	sts	0x0119, r24
				numPhases= (value / 5.625 ) * 64;
 2a0:	60 91 0f 01 	lds	r22, 0x010F
 2a4:	70 91 10 01 	lds	r23, 0x0110
 2a8:	88 27       	eor	r24, r24
 2aa:	77 fd       	sbrc	r23, 7
 2ac:	80 95       	com	r24
 2ae:	98 2f       	mov	r25, r24
 2b0:	1e d1       	rcall	.+572    	; 0x4ee <__floatsisf>
 2b2:	20 e0       	ldi	r18, 0x00	; 0
 2b4:	30 e0       	ldi	r19, 0x00	; 0
 2b6:	44 eb       	ldi	r20, 0xB4	; 180
 2b8:	50 e4       	ldi	r21, 0x40	; 64
 2ba:	7e d0       	rcall	.+252    	; 0x3b8 <__divsf3>
 2bc:	20 e0       	ldi	r18, 0x00	; 0
 2be:	30 e0       	ldi	r19, 0x00	; 0
 2c0:	40 e8       	ldi	r20, 0x80	; 128
 2c2:	52 e4       	ldi	r21, 0x42	; 66
 2c4:	a0 d1       	rcall	.+832    	; 0x606 <__mulsf3>
 2c6:	e0 d0       	rcall	.+448    	; 0x488 <__fixsfsi>
 2c8:	70 93 12 01 	sts	0x0112, r23
 2cc:	60 93 11 01 	sts	0x0111, r22
				value = 0;
 2d0:	10 92 10 01 	sts	0x0110, r1
 2d4:	10 92 0f 01 	sts	0x010F, r1
 2d8:	1c c0       	rjmp	.+56     	; 0x312 <TickFct_part1+0xee>
			else if (input == '\0'){
				sm_state = wait_input;
			}
			break;
		case forward:
			if (counter <= numPhases){
 2da:	20 91 0d 01 	lds	r18, 0x010D
 2de:	30 91 0e 01 	lds	r19, 0x010E
 2e2:	80 91 11 01 	lds	r24, 0x0111
 2e6:	90 91 12 01 	lds	r25, 0x0112
 2ea:	82 17       	cp	r24, r18
 2ec:	93 07       	cpc	r25, r19
 2ee:	04 f5       	brge	.+64     	; 0x330 <TickFct_part1+0x10c>
				sm_state = forward;
			}
			else {
				sm_state = wait_input;
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	80 93 19 01 	sts	0x0119, r24
				counter = 0; 
 2f6:	10 92 0e 01 	sts	0x010E, r1
 2fa:	10 92 0d 01 	sts	0x010D, r1
 2fe:	09 c0       	rjmp	.+18     	; 0x312 <TickFct_part1+0xee>
			}
			break;	
		case debounce:
			if (input != '\0'){
 300:	81 11       	cpse	r24, r1
 302:	31 c0       	rjmp	.+98     	; 0x366 <TickFct_part1+0x142>
				sm_state = debounce;
			}
			else {
				sm_state = wait_input;
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	80 93 19 01 	sts	0x0119, r24
 30a:	0a c0       	rjmp	.+20     	; 0x320 <TickFct_part1+0xfc>
			}
			break;
		default :
			sm_state = INIT;
 30c:	10 92 19 01 	sts	0x0119, r1
			break;
 310:	08 95       	ret
	}
	switch(sm_state){
 312:	80 91 19 01 	lds	r24, 0x0119
 316:	81 30       	cpi	r24, 0x01	; 1
 318:	19 f0       	breq	.+6      	; 0x320 <TickFct_part1+0xfc>
 31a:	83 30       	cpi	r24, 0x03	; 3
 31c:	49 f0       	breq	.+18     	; 0x330 <TickFct_part1+0x10c>
 31e:	08 95       	ret
		case wait_input:
			PORTA = phases[position];
 320:	e0 91 13 01 	lds	r30, 0x0113
 324:	f0 e0       	ldi	r31, 0x00	; 0
 326:	e0 50       	subi	r30, 0x00	; 0
 328:	ff 4f       	sbci	r31, 0xFF	; 255
 32a:	80 81       	ld	r24, Z
 32c:	82 b9       	out	0x02, r24	; 2
			break;
 32e:	08 95       	ret
		case forward:
			if (position > 7)
 330:	80 91 13 01 	lds	r24, 0x0113
 334:	88 30       	cpi	r24, 0x08	; 8
 336:	10 f0       	brcs	.+4      	; 0x33c <TickFct_part1+0x118>
			{
				position = 0; 
 338:	10 92 13 01 	sts	0x0113, r1
			}
			PORTA = phases[position];
 33c:	e0 91 13 01 	lds	r30, 0x0113
 340:	f0 e0       	ldi	r31, 0x00	; 0
 342:	e0 50       	subi	r30, 0x00	; 0
 344:	ff 4f       	sbci	r31, 0xFF	; 255
 346:	80 81       	ld	r24, Z
 348:	82 b9       	out	0x02, r24	; 2
			position++;
 34a:	80 91 13 01 	lds	r24, 0x0113
 34e:	8f 5f       	subi	r24, 0xFF	; 255
 350:	80 93 13 01 	sts	0x0113, r24
			counter++; 
 354:	80 91 0d 01 	lds	r24, 0x010D
 358:	90 91 0e 01 	lds	r25, 0x010E
 35c:	01 96       	adiw	r24, 0x01	; 1
 35e:	90 93 0e 01 	sts	0x010E, r25
 362:	80 93 0d 01 	sts	0x010D, r24
 366:	08 95       	ret

00000368 <main>:
	}
}

int main(void)
{
	DDRA = 0xFF; PORTA = 0x00; // Configure port A's 8 pins as inputs
 368:	8f ef       	ldi	r24, 0xFF	; 255
 36a:	81 b9       	out	0x01, r24	; 1
 36c:	12 b8       	out	0x02, r1	; 2
	DDRD = 0xF0; PORTD = 0x0F; 
 36e:	90 ef       	ldi	r25, 0xF0	; 240
 370:	9a b9       	out	0x0a, r25	; 10
 372:	9f e0       	ldi	r25, 0x0F	; 15
 374:	9b b9       	out	0x0b, r25	; 11
	DDRC = 0xFF; PORTC = 0x00; 
 376:	87 b9       	out	0x07, r24	; 7
 378:	18 b8       	out	0x08, r1	; 8

unsigned long _avr_timer_M = 1;
unsigned long _avr_timer_cntcurr = 0;

void TimerSet(unsigned long M) {
	_avr_timer_M = M;
 37a:	83 e0       	ldi	r24, 0x03	; 3
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	a0 e0       	ldi	r26, 0x00	; 0
 380:	b0 e0       	ldi	r27, 0x00	; 0
 382:	80 93 08 01 	sts	0x0108, r24
 386:	90 93 09 01 	sts	0x0109, r25
 38a:	a0 93 0a 01 	sts	0x010A, r26
 38e:	b0 93 0b 01 	sts	0x010B, r27
	_avr_timer_cntcurr = _avr_timer_M;
 392:	80 93 14 01 	sts	0x0114, r24
 396:	90 93 15 01 	sts	0x0115, r25
 39a:	a0 93 16 01 	sts	0x0116, r26
 39e:	b0 93 17 01 	sts	0x0117, r27
{
	DDRA = 0xFF; PORTA = 0x00; // Configure port A's 8 pins as inputs
	DDRD = 0xF0; PORTD = 0x0F; 
	DDRC = 0xFF; PORTC = 0x00; 
	TimerSet(3);
	TimerOn();
 3a2:	e0 de       	rcall	.-576    	; 0x164 <TimerOn>
	sm_state = INIT;
 3a4:	10 92 19 01 	sts	0x0119, r1
	while(1)
	{ 
		TickFct_part1();
 3a8:	3d df       	rcall	.-390    	; 0x224 <TickFct_part1>
		while(!TimerFlag);
 3aa:	80 91 18 01 	lds	r24, 0x0118
 3ae:	88 23       	and	r24, r24
 3b0:	e1 f3       	breq	.-8      	; 0x3aa <main+0x42>
		TimerFlag = 0;
 3b2:	10 92 18 01 	sts	0x0118, r1
	}
 3b6:	f8 cf       	rjmp	.-16     	; 0x3a8 <main+0x40>

000003b8 <__divsf3>:
 3b8:	0c d0       	rcall	.+24     	; 0x3d2 <__divsf3x>
 3ba:	eb c0       	rjmp	.+470    	; 0x592 <__fp_round>
 3bc:	e3 d0       	rcall	.+454    	; 0x584 <__fp_pscB>
 3be:	40 f0       	brcs	.+16     	; 0x3d0 <__divsf3+0x18>
 3c0:	da d0       	rcall	.+436    	; 0x576 <__fp_pscA>
 3c2:	30 f0       	brcs	.+12     	; 0x3d0 <__divsf3+0x18>
 3c4:	21 f4       	brne	.+8      	; 0x3ce <__divsf3+0x16>
 3c6:	5f 3f       	cpi	r21, 0xFF	; 255
 3c8:	19 f0       	breq	.+6      	; 0x3d0 <__divsf3+0x18>
 3ca:	cc c0       	rjmp	.+408    	; 0x564 <__fp_inf>
 3cc:	51 11       	cpse	r21, r1
 3ce:	15 c1       	rjmp	.+554    	; 0x5fa <__fp_szero>
 3d0:	cf c0       	rjmp	.+414    	; 0x570 <__fp_nan>

000003d2 <__divsf3x>:
 3d2:	f0 d0       	rcall	.+480    	; 0x5b4 <__fp_split3>
 3d4:	98 f3       	brcs	.-26     	; 0x3bc <__divsf3+0x4>

000003d6 <__divsf3_pse>:
 3d6:	99 23       	and	r25, r25
 3d8:	c9 f3       	breq	.-14     	; 0x3cc <__divsf3+0x14>
 3da:	55 23       	and	r21, r21
 3dc:	b1 f3       	breq	.-20     	; 0x3ca <__divsf3+0x12>
 3de:	95 1b       	sub	r25, r21
 3e0:	55 0b       	sbc	r21, r21
 3e2:	bb 27       	eor	r27, r27
 3e4:	aa 27       	eor	r26, r26
 3e6:	62 17       	cp	r22, r18
 3e8:	73 07       	cpc	r23, r19
 3ea:	84 07       	cpc	r24, r20
 3ec:	38 f0       	brcs	.+14     	; 0x3fc <__divsf3_pse+0x26>
 3ee:	9f 5f       	subi	r25, 0xFF	; 255
 3f0:	5f 4f       	sbci	r21, 0xFF	; 255
 3f2:	22 0f       	add	r18, r18
 3f4:	33 1f       	adc	r19, r19
 3f6:	44 1f       	adc	r20, r20
 3f8:	aa 1f       	adc	r26, r26
 3fa:	a9 f3       	breq	.-22     	; 0x3e6 <__divsf3_pse+0x10>
 3fc:	33 d0       	rcall	.+102    	; 0x464 <__divsf3_pse+0x8e>
 3fe:	0e 2e       	mov	r0, r30
 400:	3a f0       	brmi	.+14     	; 0x410 <__divsf3_pse+0x3a>
 402:	e0 e8       	ldi	r30, 0x80	; 128
 404:	30 d0       	rcall	.+96     	; 0x466 <__divsf3_pse+0x90>
 406:	91 50       	subi	r25, 0x01	; 1
 408:	50 40       	sbci	r21, 0x00	; 0
 40a:	e6 95       	lsr	r30
 40c:	00 1c       	adc	r0, r0
 40e:	ca f7       	brpl	.-14     	; 0x402 <__divsf3_pse+0x2c>
 410:	29 d0       	rcall	.+82     	; 0x464 <__divsf3_pse+0x8e>
 412:	fe 2f       	mov	r31, r30
 414:	27 d0       	rcall	.+78     	; 0x464 <__divsf3_pse+0x8e>
 416:	66 0f       	add	r22, r22
 418:	77 1f       	adc	r23, r23
 41a:	88 1f       	adc	r24, r24
 41c:	bb 1f       	adc	r27, r27
 41e:	26 17       	cp	r18, r22
 420:	37 07       	cpc	r19, r23
 422:	48 07       	cpc	r20, r24
 424:	ab 07       	cpc	r26, r27
 426:	b0 e8       	ldi	r27, 0x80	; 128
 428:	09 f0       	breq	.+2      	; 0x42c <__divsf3_pse+0x56>
 42a:	bb 0b       	sbc	r27, r27
 42c:	80 2d       	mov	r24, r0
 42e:	bf 01       	movw	r22, r30
 430:	ff 27       	eor	r31, r31
 432:	93 58       	subi	r25, 0x83	; 131
 434:	5f 4f       	sbci	r21, 0xFF	; 255
 436:	2a f0       	brmi	.+10     	; 0x442 <__divsf3_pse+0x6c>
 438:	9e 3f       	cpi	r25, 0xFE	; 254
 43a:	51 05       	cpc	r21, r1
 43c:	68 f0       	brcs	.+26     	; 0x458 <__divsf3_pse+0x82>
 43e:	92 c0       	rjmp	.+292    	; 0x564 <__fp_inf>
 440:	dc c0       	rjmp	.+440    	; 0x5fa <__fp_szero>
 442:	5f 3f       	cpi	r21, 0xFF	; 255
 444:	ec f3       	brlt	.-6      	; 0x440 <__divsf3_pse+0x6a>
 446:	98 3e       	cpi	r25, 0xE8	; 232
 448:	dc f3       	brlt	.-10     	; 0x440 <__divsf3_pse+0x6a>
 44a:	86 95       	lsr	r24
 44c:	77 95       	ror	r23
 44e:	67 95       	ror	r22
 450:	b7 95       	ror	r27
 452:	f7 95       	ror	r31
 454:	9f 5f       	subi	r25, 0xFF	; 255
 456:	c9 f7       	brne	.-14     	; 0x44a <__divsf3_pse+0x74>
 458:	88 0f       	add	r24, r24
 45a:	91 1d       	adc	r25, r1
 45c:	96 95       	lsr	r25
 45e:	87 95       	ror	r24
 460:	97 f9       	bld	r25, 7
 462:	08 95       	ret
 464:	e1 e0       	ldi	r30, 0x01	; 1
 466:	66 0f       	add	r22, r22
 468:	77 1f       	adc	r23, r23
 46a:	88 1f       	adc	r24, r24
 46c:	bb 1f       	adc	r27, r27
 46e:	62 17       	cp	r22, r18
 470:	73 07       	cpc	r23, r19
 472:	84 07       	cpc	r24, r20
 474:	ba 07       	cpc	r27, r26
 476:	20 f0       	brcs	.+8      	; 0x480 <__divsf3_pse+0xaa>
 478:	62 1b       	sub	r22, r18
 47a:	73 0b       	sbc	r23, r19
 47c:	84 0b       	sbc	r24, r20
 47e:	ba 0b       	sbc	r27, r26
 480:	ee 1f       	adc	r30, r30
 482:	88 f7       	brcc	.-30     	; 0x466 <__divsf3_pse+0x90>
 484:	e0 95       	com	r30
 486:	08 95       	ret

00000488 <__fixsfsi>:
 488:	04 d0       	rcall	.+8      	; 0x492 <__fixunssfsi>
 48a:	68 94       	set
 48c:	b1 11       	cpse	r27, r1
 48e:	b5 c0       	rjmp	.+362    	; 0x5fa <__fp_szero>
 490:	08 95       	ret

00000492 <__fixunssfsi>:
 492:	98 d0       	rcall	.+304    	; 0x5c4 <__fp_splitA>
 494:	88 f0       	brcs	.+34     	; 0x4b8 <__fixunssfsi+0x26>
 496:	9f 57       	subi	r25, 0x7F	; 127
 498:	90 f0       	brcs	.+36     	; 0x4be <__fixunssfsi+0x2c>
 49a:	b9 2f       	mov	r27, r25
 49c:	99 27       	eor	r25, r25
 49e:	b7 51       	subi	r27, 0x17	; 23
 4a0:	a0 f0       	brcs	.+40     	; 0x4ca <__fixunssfsi+0x38>
 4a2:	d1 f0       	breq	.+52     	; 0x4d8 <__fixunssfsi+0x46>
 4a4:	66 0f       	add	r22, r22
 4a6:	77 1f       	adc	r23, r23
 4a8:	88 1f       	adc	r24, r24
 4aa:	99 1f       	adc	r25, r25
 4ac:	1a f0       	brmi	.+6      	; 0x4b4 <__fixunssfsi+0x22>
 4ae:	ba 95       	dec	r27
 4b0:	c9 f7       	brne	.-14     	; 0x4a4 <__fixunssfsi+0x12>
 4b2:	12 c0       	rjmp	.+36     	; 0x4d8 <__fixunssfsi+0x46>
 4b4:	b1 30       	cpi	r27, 0x01	; 1
 4b6:	81 f0       	breq	.+32     	; 0x4d8 <__fixunssfsi+0x46>
 4b8:	9f d0       	rcall	.+318    	; 0x5f8 <__fp_zero>
 4ba:	b1 e0       	ldi	r27, 0x01	; 1
 4bc:	08 95       	ret
 4be:	9c c0       	rjmp	.+312    	; 0x5f8 <__fp_zero>
 4c0:	67 2f       	mov	r22, r23
 4c2:	78 2f       	mov	r23, r24
 4c4:	88 27       	eor	r24, r24
 4c6:	b8 5f       	subi	r27, 0xF8	; 248
 4c8:	39 f0       	breq	.+14     	; 0x4d8 <__fixunssfsi+0x46>
 4ca:	b9 3f       	cpi	r27, 0xF9	; 249
 4cc:	cc f3       	brlt	.-14     	; 0x4c0 <__fixunssfsi+0x2e>
 4ce:	86 95       	lsr	r24
 4d0:	77 95       	ror	r23
 4d2:	67 95       	ror	r22
 4d4:	b3 95       	inc	r27
 4d6:	d9 f7       	brne	.-10     	; 0x4ce <__fixunssfsi+0x3c>
 4d8:	3e f4       	brtc	.+14     	; 0x4e8 <__fixunssfsi+0x56>
 4da:	90 95       	com	r25
 4dc:	80 95       	com	r24
 4de:	70 95       	com	r23
 4e0:	61 95       	neg	r22
 4e2:	7f 4f       	sbci	r23, 0xFF	; 255
 4e4:	8f 4f       	sbci	r24, 0xFF	; 255
 4e6:	9f 4f       	sbci	r25, 0xFF	; 255
 4e8:	08 95       	ret

000004ea <__floatunsisf>:
 4ea:	e8 94       	clt
 4ec:	09 c0       	rjmp	.+18     	; 0x500 <__floatsisf+0x12>

000004ee <__floatsisf>:
 4ee:	97 fb       	bst	r25, 7
 4f0:	3e f4       	brtc	.+14     	; 0x500 <__floatsisf+0x12>
 4f2:	90 95       	com	r25
 4f4:	80 95       	com	r24
 4f6:	70 95       	com	r23
 4f8:	61 95       	neg	r22
 4fa:	7f 4f       	sbci	r23, 0xFF	; 255
 4fc:	8f 4f       	sbci	r24, 0xFF	; 255
 4fe:	9f 4f       	sbci	r25, 0xFF	; 255
 500:	99 23       	and	r25, r25
 502:	a9 f0       	breq	.+42     	; 0x52e <__floatsisf+0x40>
 504:	f9 2f       	mov	r31, r25
 506:	96 e9       	ldi	r25, 0x96	; 150
 508:	bb 27       	eor	r27, r27
 50a:	93 95       	inc	r25
 50c:	f6 95       	lsr	r31
 50e:	87 95       	ror	r24
 510:	77 95       	ror	r23
 512:	67 95       	ror	r22
 514:	b7 95       	ror	r27
 516:	f1 11       	cpse	r31, r1
 518:	f8 cf       	rjmp	.-16     	; 0x50a <__floatsisf+0x1c>
 51a:	fa f4       	brpl	.+62     	; 0x55a <__floatsisf+0x6c>
 51c:	bb 0f       	add	r27, r27
 51e:	11 f4       	brne	.+4      	; 0x524 <__floatsisf+0x36>
 520:	60 ff       	sbrs	r22, 0
 522:	1b c0       	rjmp	.+54     	; 0x55a <__floatsisf+0x6c>
 524:	6f 5f       	subi	r22, 0xFF	; 255
 526:	7f 4f       	sbci	r23, 0xFF	; 255
 528:	8f 4f       	sbci	r24, 0xFF	; 255
 52a:	9f 4f       	sbci	r25, 0xFF	; 255
 52c:	16 c0       	rjmp	.+44     	; 0x55a <__floatsisf+0x6c>
 52e:	88 23       	and	r24, r24
 530:	11 f0       	breq	.+4      	; 0x536 <__floatsisf+0x48>
 532:	96 e9       	ldi	r25, 0x96	; 150
 534:	11 c0       	rjmp	.+34     	; 0x558 <__floatsisf+0x6a>
 536:	77 23       	and	r23, r23
 538:	21 f0       	breq	.+8      	; 0x542 <__floatsisf+0x54>
 53a:	9e e8       	ldi	r25, 0x8E	; 142
 53c:	87 2f       	mov	r24, r23
 53e:	76 2f       	mov	r23, r22
 540:	05 c0       	rjmp	.+10     	; 0x54c <__floatsisf+0x5e>
 542:	66 23       	and	r22, r22
 544:	71 f0       	breq	.+28     	; 0x562 <__floatsisf+0x74>
 546:	96 e8       	ldi	r25, 0x86	; 134
 548:	86 2f       	mov	r24, r22
 54a:	70 e0       	ldi	r23, 0x00	; 0
 54c:	60 e0       	ldi	r22, 0x00	; 0
 54e:	2a f0       	brmi	.+10     	; 0x55a <__floatsisf+0x6c>
 550:	9a 95       	dec	r25
 552:	66 0f       	add	r22, r22
 554:	77 1f       	adc	r23, r23
 556:	88 1f       	adc	r24, r24
 558:	da f7       	brpl	.-10     	; 0x550 <__floatsisf+0x62>
 55a:	88 0f       	add	r24, r24
 55c:	96 95       	lsr	r25
 55e:	87 95       	ror	r24
 560:	97 f9       	bld	r25, 7
 562:	08 95       	ret

00000564 <__fp_inf>:
 564:	97 f9       	bld	r25, 7
 566:	9f 67       	ori	r25, 0x7F	; 127
 568:	80 e8       	ldi	r24, 0x80	; 128
 56a:	70 e0       	ldi	r23, 0x00	; 0
 56c:	60 e0       	ldi	r22, 0x00	; 0
 56e:	08 95       	ret

00000570 <__fp_nan>:
 570:	9f ef       	ldi	r25, 0xFF	; 255
 572:	80 ec       	ldi	r24, 0xC0	; 192
 574:	08 95       	ret

00000576 <__fp_pscA>:
 576:	00 24       	eor	r0, r0
 578:	0a 94       	dec	r0
 57a:	16 16       	cp	r1, r22
 57c:	17 06       	cpc	r1, r23
 57e:	18 06       	cpc	r1, r24
 580:	09 06       	cpc	r0, r25
 582:	08 95       	ret

00000584 <__fp_pscB>:
 584:	00 24       	eor	r0, r0
 586:	0a 94       	dec	r0
 588:	12 16       	cp	r1, r18
 58a:	13 06       	cpc	r1, r19
 58c:	14 06       	cpc	r1, r20
 58e:	05 06       	cpc	r0, r21
 590:	08 95       	ret

00000592 <__fp_round>:
 592:	09 2e       	mov	r0, r25
 594:	03 94       	inc	r0
 596:	00 0c       	add	r0, r0
 598:	11 f4       	brne	.+4      	; 0x59e <__fp_round+0xc>
 59a:	88 23       	and	r24, r24
 59c:	52 f0       	brmi	.+20     	; 0x5b2 <__fp_round+0x20>
 59e:	bb 0f       	add	r27, r27
 5a0:	40 f4       	brcc	.+16     	; 0x5b2 <__fp_round+0x20>
 5a2:	bf 2b       	or	r27, r31
 5a4:	11 f4       	brne	.+4      	; 0x5aa <__fp_round+0x18>
 5a6:	60 ff       	sbrs	r22, 0
 5a8:	04 c0       	rjmp	.+8      	; 0x5b2 <__fp_round+0x20>
 5aa:	6f 5f       	subi	r22, 0xFF	; 255
 5ac:	7f 4f       	sbci	r23, 0xFF	; 255
 5ae:	8f 4f       	sbci	r24, 0xFF	; 255
 5b0:	9f 4f       	sbci	r25, 0xFF	; 255
 5b2:	08 95       	ret

000005b4 <__fp_split3>:
 5b4:	57 fd       	sbrc	r21, 7
 5b6:	90 58       	subi	r25, 0x80	; 128
 5b8:	44 0f       	add	r20, r20
 5ba:	55 1f       	adc	r21, r21
 5bc:	59 f0       	breq	.+22     	; 0x5d4 <__fp_splitA+0x10>
 5be:	5f 3f       	cpi	r21, 0xFF	; 255
 5c0:	71 f0       	breq	.+28     	; 0x5de <__fp_splitA+0x1a>
 5c2:	47 95       	ror	r20

000005c4 <__fp_splitA>:
 5c4:	88 0f       	add	r24, r24
 5c6:	97 fb       	bst	r25, 7
 5c8:	99 1f       	adc	r25, r25
 5ca:	61 f0       	breq	.+24     	; 0x5e4 <__fp_splitA+0x20>
 5cc:	9f 3f       	cpi	r25, 0xFF	; 255
 5ce:	79 f0       	breq	.+30     	; 0x5ee <__fp_splitA+0x2a>
 5d0:	87 95       	ror	r24
 5d2:	08 95       	ret
 5d4:	12 16       	cp	r1, r18
 5d6:	13 06       	cpc	r1, r19
 5d8:	14 06       	cpc	r1, r20
 5da:	55 1f       	adc	r21, r21
 5dc:	f2 cf       	rjmp	.-28     	; 0x5c2 <__fp_split3+0xe>
 5de:	46 95       	lsr	r20
 5e0:	f1 df       	rcall	.-30     	; 0x5c4 <__fp_splitA>
 5e2:	08 c0       	rjmp	.+16     	; 0x5f4 <__fp_splitA+0x30>
 5e4:	16 16       	cp	r1, r22
 5e6:	17 06       	cpc	r1, r23
 5e8:	18 06       	cpc	r1, r24
 5ea:	99 1f       	adc	r25, r25
 5ec:	f1 cf       	rjmp	.-30     	; 0x5d0 <__fp_splitA+0xc>
 5ee:	86 95       	lsr	r24
 5f0:	71 05       	cpc	r23, r1
 5f2:	61 05       	cpc	r22, r1
 5f4:	08 94       	sec
 5f6:	08 95       	ret

000005f8 <__fp_zero>:
 5f8:	e8 94       	clt

000005fa <__fp_szero>:
 5fa:	bb 27       	eor	r27, r27
 5fc:	66 27       	eor	r22, r22
 5fe:	77 27       	eor	r23, r23
 600:	cb 01       	movw	r24, r22
 602:	97 f9       	bld	r25, 7
 604:	08 95       	ret

00000606 <__mulsf3>:
 606:	0b d0       	rcall	.+22     	; 0x61e <__mulsf3x>
 608:	c4 cf       	rjmp	.-120    	; 0x592 <__fp_round>
 60a:	b5 df       	rcall	.-150    	; 0x576 <__fp_pscA>
 60c:	28 f0       	brcs	.+10     	; 0x618 <__mulsf3+0x12>
 60e:	ba df       	rcall	.-140    	; 0x584 <__fp_pscB>
 610:	18 f0       	brcs	.+6      	; 0x618 <__mulsf3+0x12>
 612:	95 23       	and	r25, r21
 614:	09 f0       	breq	.+2      	; 0x618 <__mulsf3+0x12>
 616:	a6 cf       	rjmp	.-180    	; 0x564 <__fp_inf>
 618:	ab cf       	rjmp	.-170    	; 0x570 <__fp_nan>
 61a:	11 24       	eor	r1, r1
 61c:	ee cf       	rjmp	.-36     	; 0x5fa <__fp_szero>

0000061e <__mulsf3x>:
 61e:	ca df       	rcall	.-108    	; 0x5b4 <__fp_split3>
 620:	a0 f3       	brcs	.-24     	; 0x60a <__mulsf3+0x4>

00000622 <__mulsf3_pse>:
 622:	95 9f       	mul	r25, r21
 624:	d1 f3       	breq	.-12     	; 0x61a <__mulsf3+0x14>
 626:	95 0f       	add	r25, r21
 628:	50 e0       	ldi	r21, 0x00	; 0
 62a:	55 1f       	adc	r21, r21
 62c:	62 9f       	mul	r22, r18
 62e:	f0 01       	movw	r30, r0
 630:	72 9f       	mul	r23, r18
 632:	bb 27       	eor	r27, r27
 634:	f0 0d       	add	r31, r0
 636:	b1 1d       	adc	r27, r1
 638:	63 9f       	mul	r22, r19
 63a:	aa 27       	eor	r26, r26
 63c:	f0 0d       	add	r31, r0
 63e:	b1 1d       	adc	r27, r1
 640:	aa 1f       	adc	r26, r26
 642:	64 9f       	mul	r22, r20
 644:	66 27       	eor	r22, r22
 646:	b0 0d       	add	r27, r0
 648:	a1 1d       	adc	r26, r1
 64a:	66 1f       	adc	r22, r22
 64c:	82 9f       	mul	r24, r18
 64e:	22 27       	eor	r18, r18
 650:	b0 0d       	add	r27, r0
 652:	a1 1d       	adc	r26, r1
 654:	62 1f       	adc	r22, r18
 656:	73 9f       	mul	r23, r19
 658:	b0 0d       	add	r27, r0
 65a:	a1 1d       	adc	r26, r1
 65c:	62 1f       	adc	r22, r18
 65e:	83 9f       	mul	r24, r19
 660:	a0 0d       	add	r26, r0
 662:	61 1d       	adc	r22, r1
 664:	22 1f       	adc	r18, r18
 666:	74 9f       	mul	r23, r20
 668:	33 27       	eor	r19, r19
 66a:	a0 0d       	add	r26, r0
 66c:	61 1d       	adc	r22, r1
 66e:	23 1f       	adc	r18, r19
 670:	84 9f       	mul	r24, r20
 672:	60 0d       	add	r22, r0
 674:	21 1d       	adc	r18, r1
 676:	82 2f       	mov	r24, r18
 678:	76 2f       	mov	r23, r22
 67a:	6a 2f       	mov	r22, r26
 67c:	11 24       	eor	r1, r1
 67e:	9f 57       	subi	r25, 0x7F	; 127
 680:	50 40       	sbci	r21, 0x00	; 0
 682:	8a f0       	brmi	.+34     	; 0x6a6 <__mulsf3_pse+0x84>
 684:	e1 f0       	breq	.+56     	; 0x6be <__mulsf3_pse+0x9c>
 686:	88 23       	and	r24, r24
 688:	4a f0       	brmi	.+18     	; 0x69c <__mulsf3_pse+0x7a>
 68a:	ee 0f       	add	r30, r30
 68c:	ff 1f       	adc	r31, r31
 68e:	bb 1f       	adc	r27, r27
 690:	66 1f       	adc	r22, r22
 692:	77 1f       	adc	r23, r23
 694:	88 1f       	adc	r24, r24
 696:	91 50       	subi	r25, 0x01	; 1
 698:	50 40       	sbci	r21, 0x00	; 0
 69a:	a9 f7       	brne	.-22     	; 0x686 <__mulsf3_pse+0x64>
 69c:	9e 3f       	cpi	r25, 0xFE	; 254
 69e:	51 05       	cpc	r21, r1
 6a0:	70 f0       	brcs	.+28     	; 0x6be <__mulsf3_pse+0x9c>
 6a2:	60 cf       	rjmp	.-320    	; 0x564 <__fp_inf>
 6a4:	aa cf       	rjmp	.-172    	; 0x5fa <__fp_szero>
 6a6:	5f 3f       	cpi	r21, 0xFF	; 255
 6a8:	ec f3       	brlt	.-6      	; 0x6a4 <__mulsf3_pse+0x82>
 6aa:	98 3e       	cpi	r25, 0xE8	; 232
 6ac:	dc f3       	brlt	.-10     	; 0x6a4 <__mulsf3_pse+0x82>
 6ae:	86 95       	lsr	r24
 6b0:	77 95       	ror	r23
 6b2:	67 95       	ror	r22
 6b4:	b7 95       	ror	r27
 6b6:	f7 95       	ror	r31
 6b8:	e7 95       	ror	r30
 6ba:	9f 5f       	subi	r25, 0xFF	; 255
 6bc:	c1 f7       	brne	.-16     	; 0x6ae <__mulsf3_pse+0x8c>
 6be:	fe 2b       	or	r31, r30
 6c0:	88 0f       	add	r24, r24
 6c2:	91 1d       	adc	r25, r1
 6c4:	96 95       	lsr	r25
 6c6:	87 95       	ror	r24
 6c8:	97 f9       	bld	r25, 7
 6ca:	08 95       	ret

000006cc <_exit>:
 6cc:	f8 94       	cli

000006ce <__stop_program>:
 6ce:	ff cf       	rjmp	.-2      	; 0x6ce <__stop_program>
