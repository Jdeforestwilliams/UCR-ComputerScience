
mtawa002_jdefo002_lab8_part2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000028c  00000320  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000028c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800104  00800104  00000324  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000324  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000354  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003b9  00000000  00000000  000003dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000208  00000000  00000000  00000795  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000044b  00000000  00000000  0000099d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000124  00000000  00000000  00000de8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002c6  00000000  00000000  00000f0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000155  00000000  00000000  000011d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00001327  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	d1 c0       	rjmp	.+418    	; 0x1d8 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	44 c0       	rjmp	.+136    	; 0xd6 <__vector_19>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e8       	ldi	r30, 0x8C	; 140
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ab 30       	cpi	r26, 0x0B	; 11
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	c6 d0       	rcall	.+396    	; 0x250 <main>
  c4:	e1 c0       	rjmp	.+450    	; 0x288 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <SPI_MasterInit>:
		case transmit:
			sm_state = wait_pattern;
			break;
		
		default :
			sm_state = INIT;
  c8:	80 eb       	ldi	r24, 0xB0	; 176
  ca:	84 b9       	out	0x04, r24	; 4
  cc:	80 e4       	ldi	r24, 0x40	; 64
  ce:	85 b9       	out	0x05, r24	; 5
  d0:	81 e5       	ldi	r24, 0x51	; 81
  d2:	8c bd       	out	0x2c, r24	; 44
  d4:	08 95       	ret

000000d6 <__vector_19>:
  d6:	1f 92       	push	r1
  d8:	0f 92       	push	r0
  da:	0f b6       	in	r0, 0x3f	; 63
  dc:	0f 92       	push	r0
  de:	11 24       	eor	r1, r1
  e0:	8f 93       	push	r24
  e2:	8e b5       	in	r24, 0x2e	; 46
  e4:	80 93 0a 01 	sts	0x010A, r24
  e8:	8f 91       	pop	r24
  ea:	0f 90       	pop	r0
  ec:	0f be       	out	0x3f, r0	; 63
  ee:	0f 90       	pop	r0
  f0:	1f 90       	pop	r1
  f2:	18 95       	reti

000000f4 <GetKeypadKey>:
  f4:	8f ee       	ldi	r24, 0xEF	; 239
  f6:	8b b9       	out	0x0b, r24	; 11
  f8:	00 00       	nop
  fa:	48 9b       	sbis	0x09, 0	; 9
  fc:	29 c0       	rjmp	.+82     	; 0x150 <GetKeypadKey+0x5c>
  fe:	49 9b       	sbis	0x09, 1	; 9
 100:	29 c0       	rjmp	.+82     	; 0x154 <GetKeypadKey+0x60>
 102:	4a 9b       	sbis	0x09, 2	; 9
 104:	29 c0       	rjmp	.+82     	; 0x158 <GetKeypadKey+0x64>
 106:	4b 9b       	sbis	0x09, 3	; 9
 108:	29 c0       	rjmp	.+82     	; 0x15c <GetKeypadKey+0x68>
 10a:	8f ed       	ldi	r24, 0xDF	; 223
 10c:	8b b9       	out	0x0b, r24	; 11
 10e:	00 00       	nop
 110:	48 9b       	sbis	0x09, 0	; 9
 112:	26 c0       	rjmp	.+76     	; 0x160 <GetKeypadKey+0x6c>
 114:	49 9b       	sbis	0x09, 1	; 9
 116:	26 c0       	rjmp	.+76     	; 0x164 <GetKeypadKey+0x70>
 118:	4a 9b       	sbis	0x09, 2	; 9
 11a:	26 c0       	rjmp	.+76     	; 0x168 <GetKeypadKey+0x74>
 11c:	4b 9b       	sbis	0x09, 3	; 9
 11e:	26 c0       	rjmp	.+76     	; 0x16c <GetKeypadKey+0x78>
 120:	8f eb       	ldi	r24, 0xBF	; 191
 122:	8b b9       	out	0x0b, r24	; 11
 124:	00 00       	nop
 126:	48 9b       	sbis	0x09, 0	; 9
 128:	23 c0       	rjmp	.+70     	; 0x170 <GetKeypadKey+0x7c>
 12a:	49 9b       	sbis	0x09, 1	; 9
 12c:	23 c0       	rjmp	.+70     	; 0x174 <GetKeypadKey+0x80>
 12e:	4a 9b       	sbis	0x09, 2	; 9
 130:	23 c0       	rjmp	.+70     	; 0x178 <GetKeypadKey+0x84>
 132:	4b 9b       	sbis	0x09, 3	; 9
 134:	23 c0       	rjmp	.+70     	; 0x17c <GetKeypadKey+0x88>
 136:	8f e7       	ldi	r24, 0x7F	; 127
 138:	8b b9       	out	0x0b, r24	; 11
 13a:	00 00       	nop
 13c:	48 9b       	sbis	0x09, 0	; 9
 13e:	20 c0       	rjmp	.+64     	; 0x180 <GetKeypadKey+0x8c>
 140:	49 9b       	sbis	0x09, 1	; 9
 142:	20 c0       	rjmp	.+64     	; 0x184 <GetKeypadKey+0x90>
 144:	4a 9b       	sbis	0x09, 2	; 9
 146:	20 c0       	rjmp	.+64     	; 0x188 <GetKeypadKey+0x94>
 148:	4b 99       	sbic	0x09, 3	; 9
 14a:	20 c0       	rjmp	.+64     	; 0x18c <GetKeypadKey+0x98>
 14c:	84 e4       	ldi	r24, 0x44	; 68
 14e:	08 95       	ret
 150:	81 e3       	ldi	r24, 0x31	; 49
 152:	08 95       	ret
 154:	84 e3       	ldi	r24, 0x34	; 52
 156:	08 95       	ret
 158:	87 e3       	ldi	r24, 0x37	; 55
 15a:	08 95       	ret
 15c:	8a e2       	ldi	r24, 0x2A	; 42
 15e:	08 95       	ret
 160:	82 e3       	ldi	r24, 0x32	; 50
 162:	08 95       	ret
 164:	85 e3       	ldi	r24, 0x35	; 53
 166:	08 95       	ret
 168:	88 e3       	ldi	r24, 0x38	; 56
 16a:	08 95       	ret
 16c:	80 e3       	ldi	r24, 0x30	; 48
 16e:	08 95       	ret
 170:	83 e3       	ldi	r24, 0x33	; 51
 172:	08 95       	ret
 174:	86 e3       	ldi	r24, 0x36	; 54
 176:	08 95       	ret
 178:	89 e3       	ldi	r24, 0x39	; 57
 17a:	08 95       	ret
 17c:	83 e2       	ldi	r24, 0x23	; 35
 17e:	08 95       	ret
 180:	81 e4       	ldi	r24, 0x41	; 65
 182:	08 95       	ret
 184:	82 e4       	ldi	r24, 0x42	; 66
 186:	08 95       	ret
 188:	83 e4       	ldi	r24, 0x43	; 67
 18a:	08 95       	ret
 18c:	80 e0       	ldi	r24, 0x00	; 0
 18e:	08 95       	ret

00000190 <TimerOn>:
 190:	8b e0       	ldi	r24, 0x0B	; 11
 192:	80 93 81 00 	sts	0x0081, r24
 196:	8d e7       	ldi	r24, 0x7D	; 125
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	90 93 89 00 	sts	0x0089, r25
 19e:	80 93 88 00 	sts	0x0088, r24
 1a2:	82 e0       	ldi	r24, 0x02	; 2
 1a4:	80 93 6f 00 	sts	0x006F, r24
 1a8:	10 92 85 00 	sts	0x0085, r1
 1ac:	10 92 84 00 	sts	0x0084, r1
 1b0:	80 91 00 01 	lds	r24, 0x0100
 1b4:	90 91 01 01 	lds	r25, 0x0101
 1b8:	a0 91 02 01 	lds	r26, 0x0102
 1bc:	b0 91 03 01 	lds	r27, 0x0103
 1c0:	80 93 04 01 	sts	0x0104, r24
 1c4:	90 93 05 01 	sts	0x0105, r25
 1c8:	a0 93 06 01 	sts	0x0106, r26
 1cc:	b0 93 07 01 	sts	0x0107, r27
 1d0:	8f b7       	in	r24, 0x3f	; 63
 1d2:	80 68       	ori	r24, 0x80	; 128
 1d4:	8f bf       	out	0x3f, r24	; 63
 1d6:	08 95       	ret

000001d8 <__vector_13>:
 1d8:	1f 92       	push	r1
 1da:	0f 92       	push	r0
 1dc:	0f b6       	in	r0, 0x3f	; 63
 1de:	0f 92       	push	r0
 1e0:	11 24       	eor	r1, r1
 1e2:	8f 93       	push	r24
 1e4:	9f 93       	push	r25
 1e6:	af 93       	push	r26
 1e8:	bf 93       	push	r27
 1ea:	80 91 04 01 	lds	r24, 0x0104
 1ee:	90 91 05 01 	lds	r25, 0x0105
 1f2:	a0 91 06 01 	lds	r26, 0x0106
 1f6:	b0 91 07 01 	lds	r27, 0x0107
 1fa:	01 97       	sbiw	r24, 0x01	; 1
 1fc:	a1 09       	sbc	r26, r1
 1fe:	b1 09       	sbc	r27, r1
 200:	80 93 04 01 	sts	0x0104, r24
 204:	90 93 05 01 	sts	0x0105, r25
 208:	a0 93 06 01 	sts	0x0106, r26
 20c:	b0 93 07 01 	sts	0x0107, r27
 210:	89 2b       	or	r24, r25
 212:	8a 2b       	or	r24, r26
 214:	8b 2b       	or	r24, r27
 216:	99 f4       	brne	.+38     	; 0x23e <__vector_13+0x66>
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	80 93 08 01 	sts	0x0108, r24
 21e:	80 91 00 01 	lds	r24, 0x0100
 222:	90 91 01 01 	lds	r25, 0x0101
 226:	a0 91 02 01 	lds	r26, 0x0102
 22a:	b0 91 03 01 	lds	r27, 0x0103
 22e:	80 93 04 01 	sts	0x0104, r24
 232:	90 93 05 01 	sts	0x0105, r25
 236:	a0 93 06 01 	sts	0x0106, r26
 23a:	b0 93 07 01 	sts	0x0107, r27
 23e:	bf 91       	pop	r27
 240:	af 91       	pop	r26
 242:	9f 91       	pop	r25
 244:	8f 91       	pop	r24
 246:	0f 90       	pop	r0
 248:	0f be       	out	0x3f, r0	; 63
 24a:	0f 90       	pop	r0
 24c:	1f 90       	pop	r1
 24e:	18 95       	reti

00000250 <main>:
	}
}

int main(void)
{
	DDRA = 0xFF; PORTA = 0x00;
 250:	8f ef       	ldi	r24, 0xFF	; 255
 252:	81 b9       	out	0x01, r24	; 1
 254:	12 b8       	out	0x02, r1	; 2
	TimerOn();
 256:	9c df       	rcall	.-200    	; 0x190 <TimerOn>

unsigned long _avr_timer_M = 1;
unsigned long _avr_timer_cntcurr = 0;

void TimerSet(unsigned long M) {
	_avr_timer_M = M;
 258:	84 e6       	ldi	r24, 0x64	; 100
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	a0 e0       	ldi	r26, 0x00	; 0
 25e:	b0 e0       	ldi	r27, 0x00	; 0
 260:	80 93 00 01 	sts	0x0100, r24
 264:	90 93 01 01 	sts	0x0101, r25
 268:	a0 93 02 01 	sts	0x0102, r26
 26c:	b0 93 03 01 	sts	0x0103, r27
	_avr_timer_cntcurr = _avr_timer_M;
 270:	80 93 04 01 	sts	0x0104, r24
 274:	90 93 05 01 	sts	0x0105, r25
 278:	a0 93 06 01 	sts	0x0106, r26
 27c:	b0 93 07 01 	sts	0x0107, r27
int main(void)
{
	DDRA = 0xFF; PORTA = 0x00;
	TimerOn();
	TimerSet(100);
	SPI_MasterInit();
 280:	23 df       	rcall	.-442    	; 0xc8 <SPI_MasterInit>
	while(1)
	{
		/*TickFct_part2();
		while(!TimerFlag);
		TimerFlag = 0;*/
		PORTA = GetKeypadKey();
 282:	38 df       	rcall	.-400    	; 0xf4 <GetKeypadKey>
 284:	82 b9       	out	0x02, r24	; 2
 286:	fd cf       	rjmp	.-6      	; 0x282 <main+0x32>

00000288 <_exit>:
 288:	f8 94       	cli

0000028a <__stop_program>:
 28a:	ff cf       	rjmp	.-2      	; 0x28a <__stop_program>
